---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"

# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUUxQWjlHblhNMVdMK2djeDRCMmc5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFM01EY3lOVFF6V2hjTk1qWXdPREUyTURjeQpOVFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRExKTjhaM1VXY0FFek9KWjUreENORldXb28ycHBpMGplVk9NUTlZcWJUdzF3aEhlRloKNngwSzdPN29PMzhrVHM5dUNMblJiREk1K2pjRk55UzVDQkJBTDJCRUdOb1NBNG0vZ2QvVHdrRVFHckVLcTdVUQozUGhQMzEwdXlqbGpGMW84bjJERjlMa0ZnSHhYQytPTkFSeW9URDlKMk5kTTNPVG81TlFieEVzb3hjZzBkUXFiCkJLYXBVNUNxbjFkSzd1K2VBS0lOVDBka003UzJWcmZYN3l5WkpPTUp0b3l0RVRhdFo3TTdpWjU4R0xSM0lVWlEKNERxR25nKzhMbDhvbWlyQUhuZFQ5SldoUHlYMnJzYWJsa2tPZmkwNVR5U0wrdDhMOXpXTTlrNG1iMnp0OHJkSApDMWxjdi91ejlsTDVKN3VyYkZsRXFTS3BVVDM5TVpRMGN1cUZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuRUNIalBhQ0VqZXNJNzlNUFdnRkp1dVpVcll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBR05qRjNKcXd0Z2NoLzR4M1JralNqZ1FncHBPcXFSd2FjcVgxRHNwRm4xMmMvTitBWDEvV0t1CnFJSUxwQlM4REs0a0dsNXJtd2lwdExIcG5XeXpZS1g1NnF4eGc1OHg3bGNtOUlxYlY2enpFa1RQTXJsSzNxQk8KREFxYzlFKzc5UE5DVkJKank1MWRpTHA5YUxRK2pLNEl0d0lNZHNKUWhmek9TTXZpeUtMekV3Q2piQ0pURTNNcApma3VwTW9zVnhFdmVxMXdxUnFYWlRDZ05VNVRJRjdvY1dPT25zYzBWUXM0cUkvcG1CRFAzTFF0OEN1ZFlPbVpKCktMby9TSWhxUkRsdUgzVHJDV05KRndMcWxhMi9Meno3bmJoUzJSUGFSVDhZWTFIWDdVN0N1ZUIwOG9acTBZVUwKS1F1VkdwTXNISnJQSm1GaWFRVVpna28yWllNaGJFRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeXlUZkdkMUZuQUJNemlXZWZzUWpSVmxxS05xYVl0STNsVGpFUFdLbTA4TmNJUjNoCldlc2RDdXp1NkR0L0pFN1BiZ2k1MFd3eU9mbzNCVGNrdVFnUVFDOWdSQmphRWdPSnY0SGYwOEpCRUJxeENxdTEKRU56NFQ5OWRMc281WXhkYVBKOWd4ZlM1QllCOFZ3dmpqUUVjcUV3L1NkalhUTnprNk9UVUc4UkxLTVhJTkhVSwptd1NtcVZPUXFwOVhTdTd2bmdDaURVOUhaRE8wdGxhMzErOHNtU1RqQ2JhTXJSRTJyV2V6TzRtZWZCaTBkeUZHClVPQTZocDRQdkM1ZktKb3F3QjUzVS9TVm9UOGw5cTdHbTVaSkRuNHRPVThraS9yZkMvYzFqUFpPSm05czdmSzMKUnd0WlhMLzdzL1pTK1NlN3EyeFpSS2tpcVZFOS9UR1VOSExxaFFJREFRQUJBb0lCQVFDV3lsVE05eUcvamIxMQpYQmxOVWJ3NHN3bUpMOU5mdlZsQzYvTkcrWjZLSEQ2YjJuazNiTDJQS1phaFRlQ3ZpOHlQaWV5Y2xtcWwvS1N3CnUyRUg5QU5VRVphc2xhSHhzeXlodWY3eVNnUlB0dkJwMGxGQ0pqUXYzY1ptZi9lZkpXdDNDbnNrRmVidFBaV08KYTZYS09lUVN6UjVCYTdOTk83NnpYWUJRNkNFK0xsVzlXTFQvb3lhbzBLZDhkTkhwMTFSMmhMNkwvdlhWVm1mYwpOY3RENENjazBveDg4blh2K0pVd1ZOWjRaSXB1YkhrWnFoaFBFUmthWkxPNWhtaUtmMmhTb1ptZXNFVklWS0dPClFMQktFaU13TnVYYnF2akVFODF5RjBJRlZkYmdpcWhGWEQ0TnJ0dHVWUnpKTzBEdGdxazNTOWdTVWFzRFZzd1kKZ3VCVk8rL0JBb0dCQU05cXlNMS9aV3NxUzRkQ3RrY29NUHZkandwSkxLckFMWGRIQTF5M21SRUJBWG5aQnJKaApobWFHV0FaWURtWTRvMW9oNmlGNkdRZnFVNTFUc0RYelFwU2xYN3Z2SkZIUk5QSm5ORmhDd0JXSkt2Zkxudkh1CmhtRUcydXN6SitVZC9GY1QydGQ0ajJDbEFpY0VITDZOeUlzb1RYWkd0Z2pmR1U5QUIvZzRocDNSQW9HQkFQcTUKM0xtQ1hVUkRlRXJ0Ym9LakJiSzRRODNwa0dHVm9XVkRRcFVLYi9PSzAza3d4dExlR094aXhLNlNSRUtjRFNwRAo4QnRkcFdMSkF2K3BDOFdXRzRCT3NpU2RMZis1ZkZQalUvc28yMitjUExERldha1hyVFBRdnZTMmI1Q2V1dm5iCkdkY1hxZWEwRzR4YjBkZmJ1MFJremJ1M3hDOUlFZDRLS1lGQUlLcDFBb0dCQUl6QWdSMTZleDg2NTJBVmRFNWIKUnNwVDhuSmZiN0U3a2w3ajBMTkZYOWk3SHY1SnVSS3B2YU9yUE9hcE1MUkxjUWFFQnpiS2ZWdnl0dVVIV29keAoyVmUzMVh4Wjd3S2FmbHlVamwvcWhDRFpJVkJnWEM3KzF5L1drQTZWZTFndWZnTzFWSWR0cDVaRXcyNG9pejBBClIvdXUwTW9YZUFZVEowQ3hTZmMybkp0UkFvR0JBT216bXZEemVibnFaZEw1Y3p1amR1azZaa0VseHlXZWtselEKRDl6YWFMV0tua2xsVkw0eXRPcUp1YWk2djVPUzM1YVkwdEsvUEN4VEQwOThvM05kMG02TGEvTkM2eUJsSldVUQpEVFNieGNaSHpDNDlGYkRPVit4blU4Ykgwai9zSkg1R1l0U2h3d1UrdGpyalR6cTBIdDdHVXhuNVZZMTQwT2ExCmREQjh0TFlOQW9HQkFLTUhDeWs0TWdVSloxbi90VlNyR3hZU2FPZktmUVl1TUhmSUxhWklHems1TCtSYytLZmwKVGdxQ0FXMzVwYjFkdmxOWkZJTjgwb2V5Mm9FbWhaNVd1b0IrUlh6UDlQZGFGM05PWGVPMEZURTNGNWQzZUdvMgozcG93NnhqNnBDTk9QK1VBRFBZb1pndjJsWFlITlZhcm9yQ3hJZ0E5ckJKNU5ySWNiMnVpWFBPLwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUUxQWjlHblhNMVdMK2djeDRCMmc5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFM01EY3lOVFF6V2hjTk1qWXdPREUyTURjeQpOVFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRExKTjhaM1VXY0FFek9KWjUreENORldXb28ycHBpMGplVk9NUTlZcWJUdzF3aEhlRloKNngwSzdPN29PMzhrVHM5dUNMblJiREk1K2pjRk55UzVDQkJBTDJCRUdOb1NBNG0vZ2QvVHdrRVFHckVLcTdVUQozUGhQMzEwdXlqbGpGMW84bjJERjlMa0ZnSHhYQytPTkFSeW9URDlKMk5kTTNPVG81TlFieEVzb3hjZzBkUXFiCkJLYXBVNUNxbjFkSzd1K2VBS0lOVDBka003UzJWcmZYN3l5WkpPTUp0b3l0RVRhdFo3TTdpWjU4R0xSM0lVWlEKNERxR25nKzhMbDhvbWlyQUhuZFQ5SldoUHlYMnJzYWJsa2tPZmkwNVR5U0wrdDhMOXpXTTlrNG1iMnp0OHJkSApDMWxjdi91ejlsTDVKN3VyYkZsRXFTS3BVVDM5TVpRMGN1cUZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuRUNIalBhQ0VqZXNJNzlNUFdnRkp1dVpVcll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBR05qRjNKcXd0Z2NoLzR4M1JralNqZ1FncHBPcXFSd2FjcVgxRHNwRm4xMmMvTitBWDEvV0t1CnFJSUxwQlM4REs0a0dsNXJtd2lwdExIcG5XeXpZS1g1NnF4eGc1OHg3bGNtOUlxYlY2enpFa1RQTXJsSzNxQk8KREFxYzlFKzc5UE5DVkJKank1MWRpTHA5YUxRK2pLNEl0d0lNZHNKUWhmek9TTXZpeUtMekV3Q2piQ0pURTNNcApma3VwTW9zVnhFdmVxMXdxUnFYWlRDZ05VNVRJRjdvY1dPT25zYzBWUXM0cUkvcG1CRFAzTFF0OEN1ZFlPbVpKCktMby9TSWhxUkRsdUgzVHJDV05KRndMcWxhMi9Meno3bmJoUzJSUGFSVDhZWTFIWDdVN0N1ZUIwOG9acTBZVUwKS1F1VkdwTXNISnJQSm1GaWFRVVpna28yWllNaGJFRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeXlUZkdkMUZuQUJNemlXZWZzUWpSVmxxS05xYVl0STNsVGpFUFdLbTA4TmNJUjNoCldlc2RDdXp1NkR0L0pFN1BiZ2k1MFd3eU9mbzNCVGNrdVFnUVFDOWdSQmphRWdPSnY0SGYwOEpCRUJxeENxdTEKRU56NFQ5OWRMc281WXhkYVBKOWd4ZlM1QllCOFZ3dmpqUUVjcUV3L1NkalhUTnprNk9UVUc4UkxLTVhJTkhVSwptd1NtcVZPUXFwOVhTdTd2bmdDaURVOUhaRE8wdGxhMzErOHNtU1RqQ2JhTXJSRTJyV2V6TzRtZWZCaTBkeUZHClVPQTZocDRQdkM1ZktKb3F3QjUzVS9TVm9UOGw5cTdHbTVaSkRuNHRPVThraS9yZkMvYzFqUFpPSm05czdmSzMKUnd0WlhMLzdzL1pTK1NlN3EyeFpSS2tpcVZFOS9UR1VOSExxaFFJREFRQUJBb0lCQVFDV3lsVE05eUcvamIxMQpYQmxOVWJ3NHN3bUpMOU5mdlZsQzYvTkcrWjZLSEQ2YjJuazNiTDJQS1phaFRlQ3ZpOHlQaWV5Y2xtcWwvS1N3CnUyRUg5QU5VRVphc2xhSHhzeXlodWY3eVNnUlB0dkJwMGxGQ0pqUXYzY1ptZi9lZkpXdDNDbnNrRmVidFBaV08KYTZYS09lUVN6UjVCYTdOTk83NnpYWUJRNkNFK0xsVzlXTFQvb3lhbzBLZDhkTkhwMTFSMmhMNkwvdlhWVm1mYwpOY3RENENjazBveDg4blh2K0pVd1ZOWjRaSXB1YkhrWnFoaFBFUmthWkxPNWhtaUtmMmhTb1ptZXNFVklWS0dPClFMQktFaU13TnVYYnF2akVFODF5RjBJRlZkYmdpcWhGWEQ0TnJ0dHVWUnpKTzBEdGdxazNTOWdTVWFzRFZzd1kKZ3VCVk8rL0JBb0dCQU05cXlNMS9aV3NxUzRkQ3RrY29NUHZkandwSkxLckFMWGRIQTF5M21SRUJBWG5aQnJKaApobWFHV0FaWURtWTRvMW9oNmlGNkdRZnFVNTFUc0RYelFwU2xYN3Z2SkZIUk5QSm5ORmhDd0JXSkt2Zkxudkh1CmhtRUcydXN6SitVZC9GY1QydGQ0ajJDbEFpY0VITDZOeUlzb1RYWkd0Z2pmR1U5QUIvZzRocDNSQW9HQkFQcTUKM0xtQ1hVUkRlRXJ0Ym9LakJiSzRRODNwa0dHVm9XVkRRcFVLYi9PSzAza3d4dExlR094aXhLNlNSRUtjRFNwRAo4QnRkcFdMSkF2K3BDOFdXRzRCT3NpU2RMZis1ZkZQalUvc28yMitjUExERldha1hyVFBRdnZTMmI1Q2V1dm5iCkdkY1hxZWEwRzR4YjBkZmJ1MFJremJ1M3hDOUlFZDRLS1lGQUlLcDFBb0dCQUl6QWdSMTZleDg2NTJBVmRFNWIKUnNwVDhuSmZiN0U3a2w3ajBMTkZYOWk3SHY1SnVSS3B2YU9yUE9hcE1MUkxjUWFFQnpiS2ZWdnl0dVVIV29keAoyVmUzMVh4Wjd3S2FmbHlVamwvcWhDRFpJVkJnWEM3KzF5L1drQTZWZTFndWZnTzFWSWR0cDVaRXcyNG9pejBBClIvdXUwTW9YZUFZVEowQ3hTZmMybkp0UkFvR0JBT216bXZEemVibnFaZEw1Y3p1amR1azZaa0VseHlXZWtselEKRDl6YWFMV0tua2xsVkw0eXRPcUp1YWk2djVPUzM1YVkwdEsvUEN4VEQwOThvM05kMG02TGEvTkM2eUJsSldVUQpEVFNieGNaSHpDNDlGYkRPVit4blU4Ykgwai9zSkg1R1l0U2h3d1UrdGpyalR6cTBIdDdHVXhuNVZZMTQwT2ExCmREQjh0TFlOQW9HQkFLTUhDeWs0TWdVSloxbi90VlNyR3hZU2FPZktmUVl1TUhmSUxhWklHems1TCtSYytLZmwKVGdxQ0FXMzVwYjFkdmxOWkZJTjgwb2V5Mm9FbWhaNVd1b0IrUlh6UDlQZGFGM05PWGVPMEZURTNGNWQzZUdvMgozcG93NnhqNnBDTk9QK1VBRFBZb1pndjJsWFlITlZhcm9yQ3hJZ0E5ckJKNU5ySWNiMnVpWFBPLwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUUxQWjlHblhNMVdMK2djeDRCMmc5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFM01EY3lOVFF6V2hjTk1qWXdPREUyTURjeQpOVFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRExKTjhaM1VXY0FFek9KWjUreENORldXb28ycHBpMGplVk9NUTlZcWJUdzF3aEhlRloKNngwSzdPN29PMzhrVHM5dUNMblJiREk1K2pjRk55UzVDQkJBTDJCRUdOb1NBNG0vZ2QvVHdrRVFHckVLcTdVUQozUGhQMzEwdXlqbGpGMW84bjJERjlMa0ZnSHhYQytPTkFSeW9URDlKMk5kTTNPVG81TlFieEVzb3hjZzBkUXFiCkJLYXBVNUNxbjFkSzd1K2VBS0lOVDBka003UzJWcmZYN3l5WkpPTUp0b3l0RVRhdFo3TTdpWjU4R0xSM0lVWlEKNERxR25nKzhMbDhvbWlyQUhuZFQ5SldoUHlYMnJzYWJsa2tPZmkwNVR5U0wrdDhMOXpXTTlrNG1iMnp0OHJkSApDMWxjdi91ejlsTDVKN3VyYkZsRXFTS3BVVDM5TVpRMGN1cUZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuRUNIalBhQ0VqZXNJNzlNUFdnRkp1dVpVcll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBR05qRjNKcXd0Z2NoLzR4M1JralNqZ1FncHBPcXFSd2FjcVgxRHNwRm4xMmMvTitBWDEvV0t1CnFJSUxwQlM4REs0a0dsNXJtd2lwdExIcG5XeXpZS1g1NnF4eGc1OHg3bGNtOUlxYlY2enpFa1RQTXJsSzNxQk8KREFxYzlFKzc5UE5DVkJKank1MWRpTHA5YUxRK2pLNEl0d0lNZHNKUWhmek9TTXZpeUtMekV3Q2piQ0pURTNNcApma3VwTW9zVnhFdmVxMXdxUnFYWlRDZ05VNVRJRjdvY1dPT25zYzBWUXM0cUkvcG1CRFAzTFF0OEN1ZFlPbVpKCktMby9TSWhxUkRsdUgzVHJDV05KRndMcWxhMi9Meno3bmJoUzJSUGFSVDhZWTFIWDdVN0N1ZUIwOG9acTBZVUwKS1F1VkdwTXNISnJQSm1GaWFRVVpna28yWllNaGJFRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUllc01sRndCSUprSjZvTFh5bklLTlV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTNNalUwTkZvWERUSTJNRGd4TmpBMwpNalUwTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWsydmhha2ZMVTgrWnoyam95ajk4WG9EdzBLWVEKQnF1c2dQYjNHeVJjaE5DOXFnQUFTTk1CcXpJVzFzSEZQejlYQTRaVXlkbFRnUXN4dXdEclFJcUFRL3VGWlF3bgpaU0EwcjE4dm1OR2YySWJtcWtsS2ZYaXRCWVpwUGZWSTNhKzFRZklLS3JyTmRIMVR2T3M5NmJGUnJTcVlWb04wCjh5Q3YwbmNWOURNdzY1MEZpRUtFNTh4R2FrS3RlVTBnT1lxdmUrZ1Y4ZWQ3Um5WanNVNGlJcVhvVnVBRFVkUFkKdUNMbWFoWW53Z2dGdjQ2eVNpQm4wcEVSM1N3a1FMdEdlNHRhc1BBeU1nM0EwbW9UdExRL3ZtMTRWdlJwVzg3UApHQXIvZzBKMzhvdHNuL3NSa3JBZzlIcURUekZiUXEzYWtxK0twUDZaWlZSVzFIbFQzRE1NYnliTzhRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU2NRSWVNOW9JU042d2p2MHc5YUFVbQo2NWxTdGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSWpDZG1NYmE1S1FyNDRjZUlKVGhvMUNGeTJBRExxU0NILzBPN3dZN3p0RmhmTFEKOTU2YnN3YWdMRlBwZy96ZUJVWGQxNkpBTFVnTTZXMnYzQjJOeW5xZWVEZWxEWng2WCtUZkVQNUVWQ1U4SFlPdwp6NEtjL3dLT0EwMlZ4dVBLODMvdjd1YlM3TUh3WE1EcXJzc0U3ekJKdkcwV2lkSFBpRVh3MUNxaE8yeE1sd1lTCmE1bm9sWDNoMXRzenZlS2RaUitTMXRGT2ZETzJFRFYrZk9PbG1IR2RnNlBhUGU4ZUpWT096UUY5N0VtcVI5disKNUx6ci9ZdzVGaVFDQ0p0SGN6dU1XdXpqTTU4SmFxbzg3bnhtc0txQjc3eHVOWHhrcUlSQ2RpOUVUam9HUGExRApCUmhXTHo5V3pDNjlUcmhLVWNsb0lyaCtpUVRnalFKZ3kvdkwxWlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBazJ2aGFrZkxVOCtaejJqb3lqOThYb0R3MEtZUUJxdXNnUGIzR3lSY2hOQzlxZ0FBClNOTUJxeklXMXNIRlB6OVhBNFpVeWRsVGdRc3h1d0RyUUlxQVEvdUZaUXduWlNBMHIxOHZtTkdmMklibXFrbEsKZlhpdEJZWnBQZlZJM2ErMVFmSUtLcnJOZEgxVHZPczk2YkZSclNxWVZvTjA4eUN2MG5jVjlETXc2NTBGaUVLRQo1OHhHYWtLdGVVMGdPWXF2ZStnVjhlZDdSblZqc1U0aUlxWG9WdUFEVWRQWXVDTG1haFlud2dnRnY0NnlTaUJuCjBwRVIzU3drUUx0R2U0dGFzUEF5TWczQTBtb1R0TFEvdm0xNFZ2UnBXODdQR0FyL2cwSjM4b3Rzbi9zUmtyQWcKOUhxRFR6RmJRcTNha3ErS3BQNlpaVlJXMUhsVDNETU1ieWJPOFFJREFRQUJBb0lCQVFDVE5TeVlWaXlnK2pLYQp2Q1dJbjdCdkpjNVNheUNocUpmUEI4MWttd0NQMTJrczhtZFdVTzNmcDFyTEJCOFVzd2tPaWZyc3ZFajRHTmVGCjVyc0RiY243R0pQeGZSdHhqYUZPWlh3LzIwTUVrbUNQTmpSZDZqekx3WllodW1jU2h6dzJKNTBqWWZsN0V4S2wKR1RwdnV4TFdHaXlZWnhoSEZ5SzZ4Uk4xRUJFUGsrNVIyNlIrNyt2TVlDSE9ndkp4TGpXNnQ1dWpRaGNjUDRUMQpmRTQwa0ZEYXFIOTRnK1V0cW9ZdmdVdnc3SUhhdmdwWG9HNlRUQzVXVnFQOURla3BjY2FFQXdUVjlDcGdaRVh5CjFxbit5ZTJuV2kvRnpscEZDbkt3RC9HUnllM1NybDdkTEZLZitPSDNUc3ZPNVRsS0Z5VlYwVGwwSjAySlJJV3AKVWxGcTZNU0JBb0dCQU1IM1VRakdzTlN6TThtcHVaemJnNzFHZEd1NGlXbFVEMGx6RWtsbnlsWWRueUlvQTMxNwpDbnFMYnRxWVJ5VFVFc3g5Rm0ydEp6Q2k4ZWFPL0x4STBUK0JtRmtpZnZONW1VUkRIUGQ3a2ZsNUJNRjVBTmhqCmJveTh5TUpPSjJwMDR5TGNXWGphckxwSkUwSDVtM1FJdmVycTFGcjJuemplcE9kUXBpZEhJS3VaQW9HQkFNS1IKeWRVM1BTZGJkVk05MlVBRks2cklURDlsUm5icEloSU9PUFA1L2p1SWNwdExKVHExbHZaN2hXdEdsd1RGWmdTdQp0aEVpSCtwdkZxeE9xa0tKRHQ1Wk43Qm5xQ1pTN2YvU1BpaXowUXlXc2FmKzJpTVpoTWhiWThIekxYQ0ZBTUNuCjRpbUhDR0thVWNFakEyVFlBZHBDc2REeElEK2JuVDFhWU53L2hwVVpBb0dCQUswU0xXY2tTdkp2Ti8xd0NTT3kKSnhtRFBTeEZDNjlGQnlMbG4yS0tUdHVLTU16OFlTamMyZHZBZ0ZoaVdkQzl2a3hpTE5vT0Q1THhRZUVVb3VTcQpJTE9Hd2xaK1ZrS1B0TGRaSHdhZ1p2N3dBZE5VVWZIQ3Z3aXJCb09CMHQvRmprb3p6VTN0NlFPTFlyaVNyU2ZiCkNRTU5LQkJHVUlvZzk0bEN5QTd5QTIrNUFvR0JBTHpyZGNBelhJdWtnQzBOTnE2MDFvdUM1SllCcmdPenBrTkYKMEFNRlQ5ZGFTMzJCMzJvNys1TGtxTTFhd3pQOHYydjRnQXZ1eUhLRzNzcjdydEhmNXJINml0b2NLK2JhU3dGRQprTnBRanNEY2FTK25nd0xsdWtvWWdxcEZobTlrbFRCN1VsdmtJejRxZlFzOUJnU2F3R0crdEkwZU02UFBZME81ClI2ZFRmMGV4QW9HQkFJblJxdGtuWGJUQk9HUW9TbXBJcWozbEZnV3JpcDMzZVBLMHNMWlk5QmRCM2tDLzFDRW0Ka2FGUnBPT1F6RFdSNDJzeHpyY29Mb0VRaFhLdmcycGlQVHkvS29sYU1nMTNOWE9WMjQxWW9ENlBxM282aWtPYwpmL24zS3kreFp3V1kyUzlta2w0WmtxMDFNTk9OalI2d3dXZURvcnNXaW1kengwWEcyVzhkRHNBRgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUUxQWjlHblhNMVdMK2djeDRCMmc5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFM01EY3lOVFF6V2hjTk1qWXdPREUyTURjeQpOVFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRExKTjhaM1VXY0FFek9KWjUreENORldXb28ycHBpMGplVk9NUTlZcWJUdzF3aEhlRloKNngwSzdPN29PMzhrVHM5dUNMblJiREk1K2pjRk55UzVDQkJBTDJCRUdOb1NBNG0vZ2QvVHdrRVFHckVLcTdVUQozUGhQMzEwdXlqbGpGMW84bjJERjlMa0ZnSHhYQytPTkFSeW9URDlKMk5kTTNPVG81TlFieEVzb3hjZzBkUXFiCkJLYXBVNUNxbjFkSzd1K2VBS0lOVDBka003UzJWcmZYN3l5WkpPTUp0b3l0RVRhdFo3TTdpWjU4R0xSM0lVWlEKNERxR25nKzhMbDhvbWlyQUhuZFQ5SldoUHlYMnJzYWJsa2tPZmkwNVR5U0wrdDhMOXpXTTlrNG1iMnp0OHJkSApDMWxjdi91ejlsTDVKN3VyYkZsRXFTS3BVVDM5TVpRMGN1cUZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuRUNIalBhQ0VqZXNJNzlNUFdnRkp1dVpVcll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBR05qRjNKcXd0Z2NoLzR4M1JralNqZ1FncHBPcXFSd2FjcVgxRHNwRm4xMmMvTitBWDEvV0t1CnFJSUxwQlM4REs0a0dsNXJtd2lwdExIcG5XeXpZS1g1NnF4eGc1OHg3bGNtOUlxYlY2enpFa1RQTXJsSzNxQk8KREFxYzlFKzc5UE5DVkJKank1MWRpTHA5YUxRK2pLNEl0d0lNZHNKUWhmek9TTXZpeUtMekV3Q2piQ0pURTNNcApma3VwTW9zVnhFdmVxMXdxUnFYWlRDZ05VNVRJRjdvY1dPT25zYzBWUXM0cUkvcG1CRFAzTFF0OEN1ZFlPbVpKCktMby9TSWhxUkRsdUgzVHJDV05KRndMcWxhMi9Meno3bmJoUzJSUGFSVDhZWTFIWDdVN0N1ZUIwOG9acTBZVUwKS1F1VkdwTXNISnJQSm1GaWFRVVpna28yWllNaGJFRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRR2FmeFZOUGZETlVZazhCeU9TcHZiREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFM01EY3lOVFEwV2hjTk1qWXdPREUyTURjeQpOVFEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd1RmRDEwZzRabU9FSXIvZ2Z2S3cKSEhKamlTRnFSRktPVEkrK2djNFhMRjE3TjBEU1hoUkhMRmx6d3hHd1F2YlNUNUFWQlNYR0JHcDN2bi9rMEhRYQp2RC92VUVSMUZpWHpVOVJRMzBoUWdtWUV4V1N1NzNxaUdvQ0U5QlJqNHdITis4UWlmdi9QRjBSMjl2ZldrbHVRCm51ei9hazZSZlZGNVpmRTVXSlF2UmlIOW0xK3lzSXB1Qk9yTWxKNXdjVFRzT1Zkc1JxSkNEd0tIUjN5dktLN2YKeDA0L09VdkRkcklFcVdvT2RraVg2NjB3L1BndWlpekM4Qmw0ZGNudzZUTXVTRHVSWFBqZ1kzOGFJdGt6TTNNOApDK3U0eVhmN0F0UHQ3T0VzZFozdjdDZldBTHczN3A2cjRZenJsbk5ycWxFN3ZGbXRzVEJzOTBKVEtUYVI2UTV5ClpRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTY1FJZU05b0lTTjZ3agp2MHc5YUFVbTY1bFN0akFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCUmk4N2k2Uk1BaGlHSXhRWFJ1T0Roc3hWdzVGalgKNkoxL0E0cDlodGttYktBSkhKWlJ5bzdOVEZoRW1GYjQ3aXdwbjdEeEJNaktrSXRKOENQQnRPRis5ZDd3ZW1wVgpYeXA3VlJRY3gvVy9rK2ZDZU1LeksySXFKQ1lWWitwbEtWQ2dYOGlpVGg0VmFXNVYzckNYY1JUTjZ6SVR0TGNSClNsZ255NnVqZEZVbHRzZ3duSW1TZjdKSGpPcXJ3dUFzUFBqK3h6c2RweUE2L3J6UHp2U3R5YktYa0Zxc21tanQKai80QXV5S3hJTlpPRElVOCs3cGdVdkgwSHltZUdnRlBOWFJGcmNCbHBOMVg1d3B2bk5wRUJzUFNNejFrT0twbApsMWMwN1lJdTNjRVNGMTJEQU4wMTRUdWtwc1pyQU1uTGlKMVQrdmx0MkpjZ09PYmRMS2xVV25YVwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1RmRDEwZzRabU9FSXIvZ2Z2S3dISEpqaVNGcVJGS09USSsrZ2M0WExGMTdOMERTClhoUkhMRmx6d3hHd1F2YlNUNUFWQlNYR0JHcDN2bi9rMEhRYXZEL3ZVRVIxRmlYelU5UlEzMGhRZ21ZRXhXU3UKNzNxaUdvQ0U5QlJqNHdITis4UWlmdi9QRjBSMjl2ZldrbHVRbnV6L2FrNlJmVkY1WmZFNVdKUXZSaUg5bTEreQpzSXB1Qk9yTWxKNXdjVFRzT1Zkc1JxSkNEd0tIUjN5dktLN2Z4MDQvT1V2RGRySUVxV29PZGtpWDY2MHcvUGd1CmlpekM4Qmw0ZGNudzZUTXVTRHVSWFBqZ1kzOGFJdGt6TTNNOEMrdTR5WGY3QXRQdDdPRXNkWjN2N0NmV0FMdzMKN3A2cjRZenJsbk5ycWxFN3ZGbXRzVEJzOTBKVEtUYVI2UTV5WlFJREFRQUJBb0lCQUhRcHU2TXRkME1QWjN5ZwowUzVoWjhIaWY3Y05FTjk4cHJLZTVSRVRQMWxiNWwxRXFuVUhTZmIrM0pzVmdsdndHbWJkSDlZVmJLUnhBZ2JVCnkxTUx5cHNNOFNyWHpYRUFaZmNyT1dmVUNSc3NqSWZFVFd3SzFYU0xlZU5vY3RraTE1MGF3UWFMY3d6eEMzalYKYmZwVjlHK24yck1tQTFCTmNHZjZpOWlXVm9tWmppTzF4L25OOHM2L2E5TlJUUzlTaHZnaDRhdmpGYk5UMWRzbAoyYXlPVG5tOG9GK2JvNlhUcERTaUJlWnliQ3pUOXY5VXdTQ1M3RGpnaCtDUktTNENYQWtFSzNoaU5QY2MycGR1Cno5QXhOWUM0d0RiUnkzSUpXRzREYnFhOHhiYmZXcDY3M1V4UmNrMXAzWWtGVnFiVjNucElCdUd2dE9BOExIUlMKTUJMTi9VMENnWUVBd3RrNzFwNTJQVHZwaTdLV2ZmZEpqdWp5a3VmeEF4aklLcnF3WDNGdmhZN3RZYmVWZzQ3VQpnaWFkN2hsU3FRQ1NRaTRHNG5WV1hPdmthaVZrM1JWNVZBNzNHaEFRTlNmYXlVeUZGMzFhbFlWM0pVbFREVlgyCmhnKzVvbHkvU3RxdlJSTGhSOFBwWmFKT2NXWkNONE5mUnMrZEVZMzB2THd5Nms3UlphUXlUaGNDZ1lFQS9kdUQKTmFONEtSWjlmQXJpbmUrVXNFeTYvZFdQM3p3R1kzR1loM0p0b0Q5d3RpR3MzMU90OWw1ek0zRlFpbUNvN3JJcwpsUUZDeEt1Y21UTWEwa3o3UmYrWW1sU0xsOFBXNFRFNng3b3JnZlBQU3JiUnBwMkxyRllwTjhuTkpRZEFFYVdCCk1vREhpbS9sRElCcVJ6SFB6ZzZUOFRpNm1MRCtDQVZLN1lMNjdPTUNnWUF4YWIzUEU2aVFwdHozWEhibHd3eVkKZldMbTlvTWNjZkJ4Ulo3czFXdWV4enhVQjZhWEVtVzZDK2tKTk1yTnFTTnVQUlhwNEMvaXFML29XMHRVOWRrcgpCQkNPUDN5Y3ZscXhxZ0ltanRlbUM0N0htZXpCK1FibndKMG5HN1kzV1hZUllsUlhTc3VweHB0MkRxVEVSMENtClNJaGdwMHRsZ2FTMzN2MGpkWng4U1FLQmdRRG5JcklCNlpnam1RV2lKbXNWc0NrcXFJSnRVY0RRV2QvYk5YZlMKZzM2TE5KZ1VUTzhRM0NqOXRCdWlFQjlzRHZ4aGNUc2taR1I5bTE5WEllL2U0UmE4TWkrby9TZW9oRGluQzJMZwpyWUtsck83bHNUV01SZEFCbHVXcWxRUkRIYW5aSjE5T00zRDdmRXdKcVBhYllpQTZGbzNmU1c2a1Rpck45THUzCks5WDZUd0tCZ0NUekNERVk5a2ZWSFZiR2N3bmRCeUtVbFI5NldCb0IvQ1BhZUtkTmRkSllKU0ZGUGRpaDZBdmEKWkRIeDNzUDJyMnRlcDZrYVg1TkxGMzc2NkR2NzhZZlhqdlVhMjRKWUY2U01MUWRJbU5tanhveXJIWkF1Z2UzLwpHdnZJNUhoclZJNjI0VWR5RXR0UXpYNWh1UEZYcWxmMi9IR3ZkTDh4bUtpUTFWQW00WHZNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  enable-envoy-config: "true"
  enable-ingress-controller: "true"
  enforce-ingress-https: "true"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"
  ingress-lb-annotation-prefixes: "service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
  ingress-default-lb-mode: dedicated
  ingress-shared-lb-service-name: cilium-ingress

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
    cilium.io/ingress: "true"
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    nodePort: 
  - name: https
    port: 443
    protocol: TCP
    nodePort: 
  type: LoadBalancer
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.6@sha256:753c1d0549032da83ec45333feec6f4b283331618a1f7fed2f7e2d36efbd4bc9"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.6@sha256:da96840b638d3e9705cfc48af2bddfe92d17eb4f5a776b075bef9ac50efbb042"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: "192.192.192.192"
  ports:
  - port: 9999
