---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"

# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx1ZDY0Q3RhS25uWDVQcVpLQjh1eGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TlZvWERUSTJNRGd4TmpBNQpNakV5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1Q2dLME1HTUFWbjlQOE5LMmdNN3QvQm9ZOFMvbnZXcDRYNlBLUFp3Mk9RbFRmWWoKSUhSTFRVenVzQkF0ZjJvekdEQXVsN2hEOWd6SVYzeENuODdNZjMxSHV2MExnb1pZN1FSVDZoNmJ3aW9JOEdYUwpNOSt6K3lnMmVkYnRlTHY3MlJhcTNHTVI0QWRRckxZWmtUSnIxaHVObFdKdGZoRzNtTDFWV25zTEtsSWJ3c3EzCmFLazZGY045VDhiT2gyQTlaL096MFNSejVDVXdBK0RiZlpQWDNDZ2FXQ1FIb1o0OUFzQ1ZQSXhlcjZWdFFBcWsKZU5XVFFNVmtvN0dhQkk4OTNVWEdnTS9wVjZKOUNmVm11bWlyaEVTUGVJS0dDVUFsMmNNZDlhclNGQllXMDZLbwo5OGZQQmU0TSt2Q2RlemszdlNYOGl4MzhJNXQ2OHlyNldiUWJ4UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1NGcGJadUs1R0FDUE9KenQyUkgrZCtUS1pGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpYT0xwb0psYVhCcUxQcjN5UVVlRHAzZ3pEZ0wwVEVueEpLSm9wTFczblJtbzZ2QVRGeThZCit1RGQ1RUlRNUcvd0FjVmtkZ0FTZjk3VE5LVlNkOFU3Qnh0WnZxQ21DY05CZ0RPa1M2ZWlEem1FbE8zeit4REcKS1NqMUJQMDNOVHlxN25wUTBWRjVIeEh0NDZhdmpMSkpqcjV6Z3NQODBWZ0pNc2pvcTlBbUJPTTBTYnVOWXl1KwpEeENMWW10YnllVEtYdE93TTFMZy9Ua1F6VGl6eXRsVnpwNXBQMU16aXVieDMrQkh5OHJVM2R3bXJSZlJIWTA3ClVTQXNXVUE3N2xLUE9KcFBxa1dMNllvTVlZOFZzK283UXdRVEszcnBZb2p6bXNCYUlrUFRldzJ3VVBzOVREQTgKMHAycEtuWHg1TmhaZ0JxVll3elJDd29jRXV5YXRzTFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUNnSzBNR01BVm45UDhOSzJnTTd0L0JvWThTL252V3A0WDZQS1BadzJPUWxUZllqCklIUkxUVXp1c0JBdGYyb3pHREF1bDdoRDlneklWM3hDbjg3TWYzMUh1djBMZ29aWTdRUlQ2aDZid2lvSThHWFMKTTkreit5ZzJlZGJ0ZUx2NzJSYXEzR01SNEFkUXJMWVprVEpyMWh1TmxXSnRmaEczbUwxVlduc0xLbElid3NxMwphS2s2RmNOOVQ4Yk9oMkE5Wi9PejBTUno1Q1V3QStEYmZaUFgzQ2dhV0NRSG9aNDlBc0NWUEl4ZXI2VnRRQXFrCmVOV1RRTVZrbzdHYUJJODkzVVhHZ00vcFY2SjlDZlZtdW1pcmhFU1BlSUtHQ1VBbDJjTWQ5YXJTRkJZVzA2S28KOThmUEJlNE0rdkNkZXprM3ZTWDhpeDM4STV0Njh5cjZXYlFieFFJREFRQUJBb0lCQVFDSmI2MkVMdkxkWlkzdQpPUC8vNys2clVNQXhTVFY4MWRNdHFJVW9VYnVNaTNJRlVuMjZjUk5qVHpLQkVGMjM0UXRDU05Qb1JQRjdhQnZPCngyV0N5cG5aT21oWk5WRVhvVUkwRkdWUUpId0RMRHNTUk9Pb3A5ck5NbDRPYXUvRnlNZGU4QTZnajNVWEZKRCsKV1B0eHdZUEFCL3p6dmNUaktsMEVQeGtKVmhGVnZkaThNanZnV0xZM0J6MGM0ZXB4b3N1U0JUMElLc3hEMTQ1RgppQ3hTMUJyVyt5R05JbjFzb21IbFpzMEY2ck55endRS2JiOHB6UHFnTEJVQVo4czFOOXRYcG9kcXdQV2JnSCs1CkVkQWYzdzZzUzhTMmFqTUtFdFZGR1ZvUXM4dVNEdWEvZFE2T2s0Q2NXNCt1ckZWWHh1a0FkNng3b295aUhUVDUKNElTWjNIdkJBb0dCQU9XeXNtcS9vZHVLNEZqY1pCMFNZMURoVUp4SWFhZVFUNW9QRFo2Z3pOZWRQNDhvU2cwSQp4eEhJTmNSNUM5NjlUMnpBWG9SSWgwQXR3TzVJcHNOVUlHU1hab0VMWDUvaWh6RVMxNm5GRWpGaXZ2bnJ2VnFtCjFWTkRnOHdaTkpCUDFFVDlsWkpuQy94OU80MUdvdU04Zkd2MmJ4OEdJcmpHQ2pTOVgrV0JIMER0QW9HQkFQNUkKSjVwS1dYWUV2L2dIdno4Qm13TGhMdUZ4ZHNXS1dHRkJWMEN1alZyVU1wVHBnWW0zNXpJR3BkUGlkaHBDQjJwdgpaYmZrbHk3WC9XTHdBSUV3ZUxPanJmZmhvQ3JFNnkrVUVyR01Ka2VpQkswZ2RVVDc1V3pYOVYvaGJoajBEd2JnCnh5aHAxcWs2VXE2STVUdnpKcXdCYjBnb04vOFQvblNPSVUrVXoyTTVBb0dBZTFpM21MMXBkSlNpSHZYU3lRM0wKeVc0Rk5MZHFEVEpnbkxGQ3RoRlJqdU9CY3lYR2hqTlZlMFlSSVgyREUweURyem1xUjgwTzNEYjFxTC9ZMVlHQwpsNkg1eUloTUJIYkg5R0ZTOEhiRWEwTEVuVDZyZzFlZHJNWFBxN1ZKVmNtWWlxZkdQMFVZMmJDQ1h6NDBVR1IxCnlDQWcwZjhnZkNyVTVqZGZuTVgyKzQwQ2dZQTZKVEc1SEVzOHEzVmlPQk5KU3dxeEsrRFdlR1dhWWpvM2N3T0sKck45eDU1ZnhhVHZQekJlMzNzRklwRDR4WHV2bk1MWG55UU94R0g2K2d2YjZrNlRtSHdXRzZ6YiswS3llNHBNcgp1a3Ara3RQUzZ0c2wvUnZIT2RMSUsvcExCblB4TkxFVjBxM2RZSkxMaWs0dzJUYjhtZzlpUnFBWFdmRVRvZlNJCkNCVXNNUUtCZ1FDMGNnQjdvTUhHN3BzMFZ6Qi9CRnNzRWJJTXRQT2NMZW0xRWQ3N3pxRGRGZWo2RUNFc1g3eTAKcms1SVhJRE5HdnJ0ZFlRZVd3SzFsTlhQYzdsODVaRHNGTENJVXZtamlBY2hZWDFmb1ljQ1BrRmdESmNQUDh4dQp1V29ZL1I3MW1ZUWhOQ0pNYWVWb1crMWlGenYwaFVOL2tmRzBnYU5Va3ZQTWQ1SmdGTytNZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx1ZDY0Q3RhS25uWDVQcVpLQjh1eGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TlZvWERUSTJNRGd4TmpBNQpNakV5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1Q2dLME1HTUFWbjlQOE5LMmdNN3QvQm9ZOFMvbnZXcDRYNlBLUFp3Mk9RbFRmWWoKSUhSTFRVenVzQkF0ZjJvekdEQXVsN2hEOWd6SVYzeENuODdNZjMxSHV2MExnb1pZN1FSVDZoNmJ3aW9JOEdYUwpNOSt6K3lnMmVkYnRlTHY3MlJhcTNHTVI0QWRRckxZWmtUSnIxaHVObFdKdGZoRzNtTDFWV25zTEtsSWJ3c3EzCmFLazZGY045VDhiT2gyQTlaL096MFNSejVDVXdBK0RiZlpQWDNDZ2FXQ1FIb1o0OUFzQ1ZQSXhlcjZWdFFBcWsKZU5XVFFNVmtvN0dhQkk4OTNVWEdnTS9wVjZKOUNmVm11bWlyaEVTUGVJS0dDVUFsMmNNZDlhclNGQllXMDZLbwo5OGZQQmU0TSt2Q2RlemszdlNYOGl4MzhJNXQ2OHlyNldiUWJ4UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1NGcGJadUs1R0FDUE9KenQyUkgrZCtUS1pGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpYT0xwb0psYVhCcUxQcjN5UVVlRHAzZ3pEZ0wwVEVueEpLSm9wTFczblJtbzZ2QVRGeThZCit1RGQ1RUlRNUcvd0FjVmtkZ0FTZjk3VE5LVlNkOFU3Qnh0WnZxQ21DY05CZ0RPa1M2ZWlEem1FbE8zeit4REcKS1NqMUJQMDNOVHlxN25wUTBWRjVIeEh0NDZhdmpMSkpqcjV6Z3NQODBWZ0pNc2pvcTlBbUJPTTBTYnVOWXl1KwpEeENMWW10YnllVEtYdE93TTFMZy9Ua1F6VGl6eXRsVnpwNXBQMU16aXVieDMrQkh5OHJVM2R3bXJSZlJIWTA3ClVTQXNXVUE3N2xLUE9KcFBxa1dMNllvTVlZOFZzK283UXdRVEszcnBZb2p6bXNCYUlrUFRldzJ3VVBzOVREQTgKMHAycEtuWHg1TmhaZ0JxVll3elJDd29jRXV5YXRzTFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUNnSzBNR01BVm45UDhOSzJnTTd0L0JvWThTL252V3A0WDZQS1BadzJPUWxUZllqCklIUkxUVXp1c0JBdGYyb3pHREF1bDdoRDlneklWM3hDbjg3TWYzMUh1djBMZ29aWTdRUlQ2aDZid2lvSThHWFMKTTkreit5ZzJlZGJ0ZUx2NzJSYXEzR01SNEFkUXJMWVprVEpyMWh1TmxXSnRmaEczbUwxVlduc0xLbElid3NxMwphS2s2RmNOOVQ4Yk9oMkE5Wi9PejBTUno1Q1V3QStEYmZaUFgzQ2dhV0NRSG9aNDlBc0NWUEl4ZXI2VnRRQXFrCmVOV1RRTVZrbzdHYUJJODkzVVhHZ00vcFY2SjlDZlZtdW1pcmhFU1BlSUtHQ1VBbDJjTWQ5YXJTRkJZVzA2S28KOThmUEJlNE0rdkNkZXprM3ZTWDhpeDM4STV0Njh5cjZXYlFieFFJREFRQUJBb0lCQVFDSmI2MkVMdkxkWlkzdQpPUC8vNys2clVNQXhTVFY4MWRNdHFJVW9VYnVNaTNJRlVuMjZjUk5qVHpLQkVGMjM0UXRDU05Qb1JQRjdhQnZPCngyV0N5cG5aT21oWk5WRVhvVUkwRkdWUUpId0RMRHNTUk9Pb3A5ck5NbDRPYXUvRnlNZGU4QTZnajNVWEZKRCsKV1B0eHdZUEFCL3p6dmNUaktsMEVQeGtKVmhGVnZkaThNanZnV0xZM0J6MGM0ZXB4b3N1U0JUMElLc3hEMTQ1RgppQ3hTMUJyVyt5R05JbjFzb21IbFpzMEY2ck55endRS2JiOHB6UHFnTEJVQVo4czFOOXRYcG9kcXdQV2JnSCs1CkVkQWYzdzZzUzhTMmFqTUtFdFZGR1ZvUXM4dVNEdWEvZFE2T2s0Q2NXNCt1ckZWWHh1a0FkNng3b295aUhUVDUKNElTWjNIdkJBb0dCQU9XeXNtcS9vZHVLNEZqY1pCMFNZMURoVUp4SWFhZVFUNW9QRFo2Z3pOZWRQNDhvU2cwSQp4eEhJTmNSNUM5NjlUMnpBWG9SSWgwQXR3TzVJcHNOVUlHU1hab0VMWDUvaWh6RVMxNm5GRWpGaXZ2bnJ2VnFtCjFWTkRnOHdaTkpCUDFFVDlsWkpuQy94OU80MUdvdU04Zkd2MmJ4OEdJcmpHQ2pTOVgrV0JIMER0QW9HQkFQNUkKSjVwS1dYWUV2L2dIdno4Qm13TGhMdUZ4ZHNXS1dHRkJWMEN1alZyVU1wVHBnWW0zNXpJR3BkUGlkaHBDQjJwdgpaYmZrbHk3WC9XTHdBSUV3ZUxPanJmZmhvQ3JFNnkrVUVyR01Ka2VpQkswZ2RVVDc1V3pYOVYvaGJoajBEd2JnCnh5aHAxcWs2VXE2STVUdnpKcXdCYjBnb04vOFQvblNPSVUrVXoyTTVBb0dBZTFpM21MMXBkSlNpSHZYU3lRM0wKeVc0Rk5MZHFEVEpnbkxGQ3RoRlJqdU9CY3lYR2hqTlZlMFlSSVgyREUweURyem1xUjgwTzNEYjFxTC9ZMVlHQwpsNkg1eUloTUJIYkg5R0ZTOEhiRWEwTEVuVDZyZzFlZHJNWFBxN1ZKVmNtWWlxZkdQMFVZMmJDQ1h6NDBVR1IxCnlDQWcwZjhnZkNyVTVqZGZuTVgyKzQwQ2dZQTZKVEc1SEVzOHEzVmlPQk5KU3dxeEsrRFdlR1dhWWpvM2N3T0sKck45eDU1ZnhhVHZQekJlMzNzRklwRDR4WHV2bk1MWG55UU94R0g2K2d2YjZrNlRtSHdXRzZ6YiswS3llNHBNcgp1a3Ara3RQUzZ0c2wvUnZIT2RMSUsvcExCblB4TkxFVjBxM2RZSkxMaWs0dzJUYjhtZzlpUnFBWFdmRVRvZlNJCkNCVXNNUUtCZ1FDMGNnQjdvTUhHN3BzMFZ6Qi9CRnNzRWJJTXRQT2NMZW0xRWQ3N3pxRGRGZWo2RUNFc1g3eTAKcms1SVhJRE5HdnJ0ZFlRZVd3SzFsTlhQYzdsODVaRHNGTENJVXZtamlBY2hZWDFmb1ljQ1BrRmdESmNQUDh4dQp1V29ZL1I3MW1ZUWhOQ0pNYWVWb1crMWlGenYwaFVOL2tmRzBnYU5Va3ZQTWQ1SmdGTytNZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx1ZDY0Q3RhS25uWDVQcVpLQjh1eGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TlZvWERUSTJNRGd4TmpBNQpNakV5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1Q2dLME1HTUFWbjlQOE5LMmdNN3QvQm9ZOFMvbnZXcDRYNlBLUFp3Mk9RbFRmWWoKSUhSTFRVenVzQkF0ZjJvekdEQXVsN2hEOWd6SVYzeENuODdNZjMxSHV2MExnb1pZN1FSVDZoNmJ3aW9JOEdYUwpNOSt6K3lnMmVkYnRlTHY3MlJhcTNHTVI0QWRRckxZWmtUSnIxaHVObFdKdGZoRzNtTDFWV25zTEtsSWJ3c3EzCmFLazZGY045VDhiT2gyQTlaL096MFNSejVDVXdBK0RiZlpQWDNDZ2FXQ1FIb1o0OUFzQ1ZQSXhlcjZWdFFBcWsKZU5XVFFNVmtvN0dhQkk4OTNVWEdnTS9wVjZKOUNmVm11bWlyaEVTUGVJS0dDVUFsMmNNZDlhclNGQllXMDZLbwo5OGZQQmU0TSt2Q2RlemszdlNYOGl4MzhJNXQ2OHlyNldiUWJ4UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1NGcGJadUs1R0FDUE9KenQyUkgrZCtUS1pGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpYT0xwb0psYVhCcUxQcjN5UVVlRHAzZ3pEZ0wwVEVueEpLSm9wTFczblJtbzZ2QVRGeThZCit1RGQ1RUlRNUcvd0FjVmtkZ0FTZjk3VE5LVlNkOFU3Qnh0WnZxQ21DY05CZ0RPa1M2ZWlEem1FbE8zeit4REcKS1NqMUJQMDNOVHlxN25wUTBWRjVIeEh0NDZhdmpMSkpqcjV6Z3NQODBWZ0pNc2pvcTlBbUJPTTBTYnVOWXl1KwpEeENMWW10YnllVEtYdE93TTFMZy9Ua1F6VGl6eXRsVnpwNXBQMU16aXVieDMrQkh5OHJVM2R3bXJSZlJIWTA3ClVTQXNXVUE3N2xLUE9KcFBxa1dMNllvTVlZOFZzK283UXdRVEszcnBZb2p6bXNCYUlrUFRldzJ3VVBzOVREQTgKMHAycEtuWHg1TmhaZ0JxVll3elJDd29jRXV5YXRzTFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUllUGFQSzgveXRLYWQwMnNCT1NWaWd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TmxvWERUSTJNRGd4TmpBNQpNakV5Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJkVEhUYmR1bTlCNWhLM3lZdlE3OEVhb2VJNjcKRUhKT050M1VnbGhOZ1dYQXVRK2J5cUJoZlhGODNBT1A5QnZHNG1qWFJpV1haYVEwSnEySC9BcE9EaXZWelNVWApuOVJrMzd1YUMrTHNEaHpBMVk2L1pxSHkwRjAvTzZrNm5FU0dmTCtVNWlxV2RuS2orRTh0N2pNcEsxem9OQjYyCjNFMTNPcE5zVytMV25LVU5ML1Ztei9CYzhlbDgxbytHWEtQZTU3V2FjaWFJbzVKWkdRa2FVTzhoM3NGQjdTOFgKY09jS0JOekhNSkpNb3ZXMVJReGRXOGgxdTV3cEhFKzl1SVI2OFZCbytzclF5Lzc4bXlidm50WmtaMWtjNFFOYgo3Mk1pdEx5ZFlYZVhDaUlHdEFLMXVnZ3FvSTNnbG1tZ0lVazNDaDQ2Y0pXLzY5RlFFaWNWUmxGSXJRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVGtoYVcyYml1UmdBanppYzdka1Ivbgpma3ltUlRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ09VQmxLOHpOU3k4L0x4SE5KellTWGZpQ2xJVmIwY09penpnczU3b05MYXNCZ28KbHNYVE52NnlQVzhBaXE5SjI2SzBjNUlmTEFnUWVobmVBcDZKSUVyTVpwMm9nOXl5UkgyTnI3SFV4VVE5SFNYQQpZemQ1SEVPTUFvTG1MZ3htNHdTZ0txNFROWS8vaTJJRHFwNWNqdHJmRkErMUgzc0ZQT2Ewam80aEV1NFdNWTVrCmc3NjJMUHZmVDlwVFhYZk9jWVEza1hHVHJId2duS3ZqeklId0ZVZ0RaY2RQNWJJbDVNSGJ3NkNQcUJxWjhGdmEKRVJlY2RxWk9NQW80WDV3Rk5NU1dvL2xJR1RJTFBUTkFrWVhuOVc0R2lWMzFLTHh4UjFnbmx1UWFiTGlTSytvZwpQTkF1V2lOUGNiNjZ0QUgweHZldHl0aWJwN2JyajZJeTBFTytYZ2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMmRUSFRiZHVtOUI1aEszeVl2UTc4RWFvZUk2N0VISk9OdDNVZ2xoTmdXWEF1UStiCnlxQmhmWEY4M0FPUDlCdkc0bWpYUmlXWFphUTBKcTJIL0FwT0RpdlZ6U1VYbjlSazM3dWFDK0xzRGh6QTFZNi8KWnFIeTBGMC9PNms2bkVTR2ZMK1U1aXFXZG5LaitFOHQ3ak1wSzF6b05CNjIzRTEzT3BOc1crTFduS1VOTC9WbQp6L0JjOGVsODFvK0dYS1BlNTdXYWNpYUlvNUpaR1FrYVVPOGgzc0ZCN1M4WGNPY0tCTnpITUpKTW92VzFSUXhkClc4aDF1NXdwSEUrOXVJUjY4VkJvK3NyUXkvNzhteWJ2bnRaa1oxa2M0UU5iNzJNaXRMeWRZWGVYQ2lJR3RBSzEKdWdncW9JM2dsbW1nSVVrM0NoNDZjSlcvNjlGUUVpY1ZSbEZJclFJREFRQUJBb0lCQVFEREVDNlZZcUN5K1NJSQpkVGdyOHFmR0I1QVB2VWk0ZHBPaHdFM3ZseUY0c1dTK2s4S2YxYlRYZjR3ZS9UV29sRU1xTmxZb1k3dEtjcHVjCjB5S0Z5YmlTS2lEZi9zcEQvdytCNWw0UkxOalQzbDIwSDRzNFhlZXhQUDlGN3Nva2E1eS9FMVJFTkhqZWd0UmcKcEk3dDBuU1lkeThjbFRDTTRQWFd4M051YVJoajFpWm5rcVhHS1FsL2E5RG5zMGNwQWVPWmNBbm9wQ201ZWg4TQpMeGNpcTEzRnhaM3pIWTRHeXAvQlNXVWtlV3VsNlB2U3VZUTM0ZzJtL2twMTU5ZTJsbEhXdnhUWlYvN0xVd1EwCjJlVEUrZ3ZQZ0M5emRqMCtSOTg0cFpIRnJIWEIrR3J4ZzJEMTFOdkp2cTZjQWJVQ1JtWXRXNlJCQ1RKWWNValMKeStNVDQvakJBb0dCQVBROUhjSHJhc3VUNWxzemZYbmhKcGdMOEFlcVhUa2ZVRHpNNUJ4WWhyckViL0NlZXpPbwo0VXN0UXFkakRoUVhQOGFOYStHWFVMN0V3TXhyQkxFYktMVmlSWWhCZE52ZzJaTDc0VDduL0VvMXNkd1FUc0IzCi9uc1R3ZThOcDBUem1WWDdTVDNsOEZlMVFnNVJIaXB2UE9OOXZrN2Rhd3VkMEh5VHB5TCt0RFE5QW9HQkFPUlMKSHFHK2VlTTNWUGZCQlNJVCtMam1nMDF0cXo3SSsvUERaQ3Z6MmdEdG04amV2T05pQkFRRVpFV2RRR0Z1TlBWdQpqMUI4RmZHdXdXMWhsUzVPVEpnUit4RWZ6cDhHNDl4U0NCcGxZYUZOMUF4TkdmOVgreVE4S2Fla3dJQndKZzhHCjBwTU1GeWRmSUVBOG9WVWNTazlueHZvakZaeWRsbUtCaTdxakwvMHhBb0dCQUlacGVBMzNwQzlqTnJ2c1MxcWUKMlNHR09GUFBvenhEaW1IYmxKSXcrZnloRE1YTVFoczlEcmZUc2NIeTFwV2g4ZHd3aWpWOWs5ZFk2bzNWTzZESQpSSkFHQkNRbmVjdGtJL2tyRzF3R1NhY0JnOStMTGZ2b1RhbW9SdXRyaFNtQ01sbktVQlY3ak5pSURWRlp2Uk0zCllyZ0R4SThjZGNQUDF5UW9FaXhGSmlFMUFvR0FEMWJoRGZiUkU0M2RISVFRUnpqV1JmM2VwbTRPeWpvUWkxRCsKUXVHd0xNM0o0Slh1Vk14NS9wY1k4WUJlR2UyZ2l6aXhValB6K1hmSE1RVVVVN2NZK0VLRS9xS0hiREczVDA4SAprbFpyVjczMTJCbTUvR2k1eTdackNnTk1sNVJ4U2lNb05JN2tZMVhGd2VzUTM3bjEyQjNkeFdKa0NsQ2dFT0FwCk5oSE9vSkVDZ1lBZW5HVTVoMUJtWmJPdElPQkx1dkNhOEo3dmFaaUZ2QlJUZGZzdXJBU2xTeEU0Y05tWHpIdkIKZ0RoZWhkeGNWWCsyS0IwS0d4azk0WFJEQ0c5RGN1QzBMbnZOYjJvblJQRyswM2VOVDc0SlNpY2NsUWVUcnhMNQpzTTBsUzk5bE5kQ0E0Q2RBcTV4V2dYOTJWOElvamhpUkRVTDdtMG15NmVKZXhKbjlxQWZ1K3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx1ZDY0Q3RhS25uWDVQcVpLQjh1eGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TlZvWERUSTJNRGd4TmpBNQpNakV5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1Q2dLME1HTUFWbjlQOE5LMmdNN3QvQm9ZOFMvbnZXcDRYNlBLUFp3Mk9RbFRmWWoKSUhSTFRVenVzQkF0ZjJvekdEQXVsN2hEOWd6SVYzeENuODdNZjMxSHV2MExnb1pZN1FSVDZoNmJ3aW9JOEdYUwpNOSt6K3lnMmVkYnRlTHY3MlJhcTNHTVI0QWRRckxZWmtUSnIxaHVObFdKdGZoRzNtTDFWV25zTEtsSWJ3c3EzCmFLazZGY045VDhiT2gyQTlaL096MFNSejVDVXdBK0RiZlpQWDNDZ2FXQ1FIb1o0OUFzQ1ZQSXhlcjZWdFFBcWsKZU5XVFFNVmtvN0dhQkk4OTNVWEdnTS9wVjZKOUNmVm11bWlyaEVTUGVJS0dDVUFsMmNNZDlhclNGQllXMDZLbwo5OGZQQmU0TSt2Q2RlemszdlNYOGl4MzhJNXQ2OHlyNldiUWJ4UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1NGcGJadUs1R0FDUE9KenQyUkgrZCtUS1pGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpYT0xwb0psYVhCcUxQcjN5UVVlRHAzZ3pEZ0wwVEVueEpLSm9wTFczblJtbzZ2QVRGeThZCit1RGQ1RUlRNUcvd0FjVmtkZ0FTZjk3VE5LVlNkOFU3Qnh0WnZxQ21DY05CZ0RPa1M2ZWlEem1FbE8zeit4REcKS1NqMUJQMDNOVHlxN25wUTBWRjVIeEh0NDZhdmpMSkpqcjV6Z3NQODBWZ0pNc2pvcTlBbUJPTTBTYnVOWXl1KwpEeENMWW10YnllVEtYdE93TTFMZy9Ua1F6VGl6eXRsVnpwNXBQMU16aXVieDMrQkh5OHJVM2R3bXJSZlJIWTA3ClVTQXNXVUE3N2xLUE9KcFBxa1dMNllvTVlZOFZzK283UXdRVEszcnBZb2p6bXNCYUlrUFRldzJ3VVBzOVREQTgKMHAycEtuWHg1TmhaZ0JxVll3elJDd29jRXV5YXRzTFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUxCMmcvUTM0QWxlOGg3a3J3L2R5UU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE56QTVNakV5TlZvWERUSTJNRGd4TmpBNQpNakV5TlZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1ka0pKa2tNY01BWUU4R2kvNkUKZStkTE5meWtaZ0hnRkppbTRTSWZMWVVnN2RSN2hvK3FlTEhyTTFCUUEvYS9pdEhWYXpscnhSa0pVUHhVMGEvNQpKRE45Z0wrYmpZcnBDSUNlcmNhYkxlUVZuRnZDWHVpb2NITkdjQk1pWjVZaG8xbnM4SWErbmVWREhKUDFZWUlUCllrMGQyK1lvRFgxS1VMM2FyMEdkZlhhOWdrMTQrUWM2YnZPRnhlSkVJZ3VnaFVEdGV2RHY5YmRXaXlUSWxORS8KVy9TQnJENkUvWWZaUCs5YWYzeU5Jc2JBRW5XTTVFOFQvQ2dZMkJ0UEVycHZXSjJKQTlNMWtWNWxNUDRPTXRGagpjYi9IZDBVZWNDdkFBbVBCcCtjTDRpNDdFdXlRcThYM3pZdmIzWlVUNmZ0aXMzSWVMdFJ3TkErRGFQays4bSsyCnQrc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTVJV2x0bTRya1lBSQo4NG5PM1pFZjUzNU1wa1V3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUxNYkN0RExnbmY3N1NEb2x1MWtTakl4MXJYcjQKU0tRbytLZ1lFRVZZM21Kb1VSUm1zdnpQckFQZkZLTnRFUXdrOXJ6UUsyeEppYVFhODYxTDhvcjFhU0NmSWkxcgpNOG9jQWxSdVdITlh5M282eGE2TXZ4d3JscTZUeVZzM0ZLRnNjTjcyT3l4RGVUMEN4L0ZmcitJUWlwTDhGWW9jClVPV1FDQzgyUWtjVXR2ZlIzSG1SU1RNNGUvQnpyWFBIaGQ3aVJKODBhNVVmY3ZRYmFnckZ1TWRobHY5ajdnOVEKKzJXc29LTVNrNjFWVHBBWnUyQ2t4WlpVVjkwbDY1WFVrelBMRWpqRWFhaGQyb0IxTVNUcCtkYjVQZTNXbTdjTAo4dktDeHRkblNJdkxNSlQyNkt5UHQ3alNTMS91YkZiS2w5NCtRZHRPRzZBMmN2MFdUU0F6M0VsT3JRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDJRa21TUXh3d0JnVHdhTC9vUjc1MHMxL0tSbUFlQVVtS2JoSWg4dGhTRHQxSHVHCmo2cDRzZXN6VUZBRDlyK0swZFZyT1d2RkdRbFEvRlRSci9ra00zMkF2NXVOaXVrSWdKNnR4cHN0NUJXY1c4SmUKNktod2MwWndFeUpubGlHaldlendocjZkNVVNY2svVmhnaE5pVFIzYjVpZ05mVXBRdmRxdlFaMTlkcjJDVFhqNQpCenB1ODRYRjRrUWlDNkNGUU8xNjhPLzF0MWFMSk1pVTBUOWI5SUdzUG9UOWg5ay83MXAvZkkwaXhzQVNkWXprClR4UDhLQmpZRzA4U3VtOVluWWtEMHpXUlhtVXcvZzR5MFdOeHY4ZDNSUjV3SzhBQ1k4R241d3ZpTGpzUzdKQ3IKeGZmTmk5dmRsUlBwKzJLemNoNHUxSEEwRDRObytUN3liN2EzNndJREFRQUJBb0lCQUR6dGN1bUF6OXZnYjQxMgpXS3pyV3Rrd2VFeTlCNWFuSEdRUkNsWmM1Skg3bi9ELzFmeHNnUGtNLzk4WXREMWdCbEZjUDZtS0x1NFpsSyttClUzVE1VcTJST2hoU3RndXViYlN2eURZYUVRblRPTFlwVE1zWFBWVmNQcjc2RW1FajRrQ0dVSEU4S2c5MlZITTUKMWhQalRIUjRIVXZWRFZvdHJVSjJZbnRRWHBnN2drOVBZVm1oUUVLSzJUb0svZ2Z6cWVSTzNMTFdnL0JKZjB0YgpGaTRYbUlSZGV3RjlFSlBxcHJhcHVodFNWa3B0QVh6WEp0WHV0dFEwWDU2TmtGNW5GSi9ZUzVMOXZKcmY0VDRrCkVhTGJDejVJSGdPWDBUTk16N1czMlNsTTB4eU5pTmV1WE1LUDlFSnZudWFEckp1aVhpcGRETDRxSVVONUhmYmYKS0E5TkJmRUNnWUVBM2pBRHZiMlRyZ1BOTEFTWnpsbHFYNFdCWStlRGZDdmFtZERHc0VxSFFjcE4rMy96RDdaWQpWWHhrK3pKa1NTclVKWW5pRWNXVXlIbG9UcnJGemZjY2plalJMLzR6eXJUdk5HY1doYlBCemdOWThvS3hmWXpJCis2K1Mvdy9sRktrNnRmdUtVMktYREpuTWc4M0paKzZ3QmhNNDVBb1JjKytCKzV5RDJxd1FMNzhDZ1lFQTVid0cKNXc3UWgvbnZBcE54TmJoR1ZVbGlnK0RiL0xFdFFPZ1YwS3ZlMm9lWTZ0SFlzbW9MZER5elpDb1gybVJTcDJHRgptZkdwWUpkb2tZVmphd0xqc093OHdhbklTQksyaW8vS3doNnJ3MFM4ZmxJQ3U3Yi9YNlRTZ1hQejVPVkFoSTN3CkxGbTBYei85TG1QVU9NaTZvWXlya3VZWlVZYzlRcmVPSW5JQWd0VUNnWUJhLzMwNHc2RHRQeDlUck5xMVdZZW8KY1l4SnQzTHhjeUNIcUtzSFhxN0Fzak40RXJJZ3VFUzdWa1FoWVVVVGRsZ0d1ODc4Q2xqaU5sOFRCNG1semxSQwpocHpPTkNWUUd3UnhDTnQvak55T0hHN2NlOHhucURaVVpsY2s0WVNvRHBzK0Z6UlM3R2tDdnlhMHdKNkJVNCtDCkhYTkthaGsxeTEwSUNOVXp4UTZvRHdLQmdDYU9XdjQyWDBzaTZEa2ZjN1dYV3I1L2xYZ2FxZkVMNzFOZ1lDRG8KWjN0M25ITjBpcERPK1dNbHVObkxzcnNsY1RYRVNUN2Y3eFJWOU9mUFlqTVloZ3d3YWJYNi83RVE2dS93V0JBaQpRNk4vQ3IrTWxnYlpISno1dFphaVZrR0pORDNLOEk4UTh4TzFVcEdSa1pHQ0pzaHNLbk42Q0svRktjUGp1SWdSCmFBS05Bb0dCQUt5NWxyVlNoc2Z4L3pNV1Fqd1NGMUErSko2UEYyRGdLOTh4M1VVSmlHSFRQb2NRTG91azJDNDAKcTlzOWpvNU0zM1ZEellrK0Zvd2FuYjc2VkFHRlNSZzl1OVE1ZWhJZVN3dGRRWVkvdm9hbHhrY1FzZ2pRdUtTNAovQnQ5L1l0VGpmN2N3NitGTDdaakU3WDNlQmNhTmhMREZvVDI5anlsckhnZzMvUU5sTkd5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  enable-envoy-config: "true"
  enable-ingress-controller: "true"
  enforce-ingress-https: "true"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"
  ingress-lb-annotation-prefixes: "service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
  ingress-default-lb-mode: shared
  ingress-shared-lb-service-name: cilium-ingress

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
    cilium.io/ingress: "true"
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    nodePort: 
  - name: https
    port: 443
    protocol: TCP
    nodePort: 
  type: LoadBalancer
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.6@sha256:753c1d0549032da83ec45333feec6f4b283331618a1f7fed2f7e2d36efbd4bc9"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.6@sha256:da96840b638d3e9705cfc48af2bddfe92d17eb4f5a776b075bef9ac50efbb042"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: "192.192.192.192"
  ports:
  - port: 9999
