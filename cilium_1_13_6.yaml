---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVA2cWxGNm5XQkpaeUxFcENZRnNjT1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5EQTJNalUwTUZvWERUSTJNRGd4TXpBMgpNalUwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVnZNaVFKcTZmRTlaUGhub3owUDFqaEtPWDdIRmVQV0diYXp1NGZUNnlFL1dmenEKZXB3N0pzQWJjQWFJeDMrbnB4ZHdlTkZ4TVExclh0OHMyMWxoc2lJKzFXUkhvSWtEeHdVQnYxOXlnNXdoaXFZWQp3SzlEZkh6NUFXVUIzRndhRGRRUmU4WDRhdW1BeXdZVTJPUlBvS29jZ3htN2tubVZ0N2xmWS9tVU5rRVFqWG1vCnU4cDZWeXkvQ3k3N1ZRR1Ywc1J2anFRcmVMU2VhOEFlb2srVkpqWXdvakZPMHo2MHBOc2daUXYrRTBsSHdmREgKZ3YrWnZrb0dEMTdWa0RGUUdaUll4akx3MXZPRFZPL3F2SEhqTVFVc2NFQnJ4RkIxVHFsYU0wdkZJSVE5N29IYwo5MURSKzdocjMrWFZ4MmwrUzNrS1lQQ3dsbTNERUs3VXhXZGkrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDZqTnFQZnRZYUt4UGhwN2FuZitadXA4RUpHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hCNnJjZzNnR0FhRUcwWjRveTVpMVBUekQ5WE1FVUI5a20yRnFacWdEZEhMbmdNNlpLODZUClZtOWpBT0UxamszUzZCRVBwd3ZjVXJxcHlnc3B4VHIrNzVQT0RRdUd4ZDd5NnFCaWlBdzJKZnRWN0llRlpkencKYzB2dEFVbkYwWVNieDlyTllBc0Ryai9HTFozN3EvNWw0UUxLdjNHbloyRllMZlZ1VGRMZnYzUWFNUWt4M1dNOApUSGo3WTRKNm4vdmlUeDkvbWpBekF4blgzZDB4TG41Q3p4TDZva1hCSDM4MGtQUjkyM3hyQ1ljdnRtVzhFL1dUCmdoOUIxeVFSOG9SVEliR3JGK2EzNGI4Rk93aVpkVUFyYW9xUERyREZKbDY0TEh6blp2c2lucDBGQTFldWliM1kKN0N4d3ZQdm8wN0hPMnROYmNObGEvK25wV3VVdENDREcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFZ2TWlRSnE2ZkU5WlBobm96MFAxamhLT1g3SEZlUFdHYmF6dTRmVDZ5RS9XZnpxCmVwdzdKc0FiY0FhSXgzK25weGR3ZU5GeE1RMXJYdDhzMjFsaHNpSSsxV1JIb0lrRHh3VUJ2MTl5ZzV3aGlxWVkKd0s5RGZIejVBV1VCM0Z3YURkUVJlOFg0YXVtQXl3WVUyT1JQb0tvY2d4bTdrbm1WdDdsZlkvbVVOa0VRalhtbwp1OHA2Vnl5L0N5NzdWUUdWMHNSdmpxUXJlTFNlYThBZW9rK1ZKall3b2pGTzB6NjBwTnNnWlF2K0UwbEh3ZkRICmd2K1p2a29HRDE3VmtERlFHWlJZeGpMdzF2T0RWTy9xdkhIak1RVXNjRUJyeEZCMVRxbGFNMHZGSUlROTdvSGMKOTFEUis3aHIzK1hWeDJsK1Mza0tZUEN3bG0zREVLN1V4V2RpK1FJREFRQUJBb0lCQVFDK0JiQlQreG5IVk9zQQpwbWFLeDNXRVhuc2dURzJ1OUtqemxkejByWWd2dG5HbDMrV0RmQ0pFUGNHcG9JU3RiclJnK09sZy85alpTUERYCm40RTdacGxCOGN0T0xFTEc5eFd5b2x5L3NvWmg1bWliUzc3VHhVQmYwWjdCSVVqYkZjMmdGNGYyNisxYVBLNWwKbUJONytWNDgyYW9mWkUvWDF2dUpVbnUrWmwyY0R6WVE3SXRwNVkydGNZSm1uR29laml5bW8wdHNUT2NMMUdONApjN1djQ2N4TGlkNE9saVgxR01aRU9rWXFnTERJRnhYalFRWFZSemZSenV3SnVZMFprb3QzYjdxQUJZS0Y1QWgzCkpNd3VmNnpJYWFEV1lJTUVWaFM3bUFtOE1XWWlOVE0rY05aekdyZUdZN21wQThJY3ZtR3YxaWxQNnR1UE1kWmkKclVDMThTV3hBb0dCQU9jOUkwcHlFN1VZN3NoNXgvaE90R1ZYaVhZejVSV2daTkRqNjRtSlpHMGpNOE9MdjJYUApQZUV5dDV5NkxRTEhsN1hCalZaa0JwWGNQZkdER1BPcW1neXh1eTBSaERrbTFieFNlL1VvVTlpVStpc21ZYWJlCnVOSlg2VFBXTFo2cXpleStBaDE5cEM3UkhqUFFLNklmdm1KQmRzVndQRHY1SER4VTU2REU5ZDdYQW9HQkFPZkcKM2QwbVhqUGVnN2ZFcDl0RFYvZ2Q3VVp4bHNWeStKMEVFcEJRRDFLdWFEVzVJK3pibHFwaWExdTFjaDV0YzhjNApKczZXUkNLcytzbnJYRGNIQVpPdndmVDdOZ3gwcmh6VUZwdFhrdVhqNHdidldYUFAyRzJidDBMbm5TWis5WmVaClkwNHZmYnV4VDQ3K0YrZThaSTJjdXdNOWJoNVRWMENETWVjT01LS3ZBb0dBTkhXMlQrbFpkemhVMDc1dEUzUW4Ka09ZdkZWWG9udU5vZTh0NVlCWi9aaE1hWno2SkNYdmV1ZnhiazM3WlAwd3dxdGRpVFRzY0UxdUg0Z2F2M25mUgp3eGQvTTFaSi9QMUdlQmJ1Y0V2WjJjVFNqSCtFbityZld6aitldmdZR1dyK2xMcjJsK0l0SVVIbjdERko5Tm5tCnd6dSt5a1FRSmpyNW9PWlNOakw0NUxrQ2dZQlhXTENmK1Nlak1JWS9LUk9CSkQzd3VZYUQ5NmEwUG9IRzJwUU0KWXIrRGowcWloR1V2akFtWnFJR0JERDQzalZRR2pmakIvZ3NyYmprTkEyKzdKUjdKQTRGNnkza3c5SC94U1ZSRApzcHNmbStRZzV1NjFJRzBWMFlzYzRhQnRzNGJtWE4zNXh4Z0JOZThmbWs1ei9LR0FaTUp0bENiOXNyYTlEelF0Ck9VSEc3UUtCZ0ExQitwTGhuZWhsS1J3MGUwdzB6MVRKUHpJa3Z5YWttd0JUSWh4TmNDajVvdE1lZjRGVjVuZGIKYy9GVHd5bmdEcFU1N3M0ZlBnRnh2cVpOSEM2YmlUditqWXRsc3RmRmhPRGlCV2tzamZ1MjJmdFZid0NhdG5rWQpFZGhPT3VHOUc4RCt4RXlVUktFdVdLNUc2R1J1U1RBdkVsdnM5NXRQbkl4OUhBYXlNbTBKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVA2cWxGNm5XQkpaeUxFcENZRnNjT1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5EQTJNalUwTUZvWERUSTJNRGd4TXpBMgpNalUwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVnZNaVFKcTZmRTlaUGhub3owUDFqaEtPWDdIRmVQV0diYXp1NGZUNnlFL1dmenEKZXB3N0pzQWJjQWFJeDMrbnB4ZHdlTkZ4TVExclh0OHMyMWxoc2lJKzFXUkhvSWtEeHdVQnYxOXlnNXdoaXFZWQp3SzlEZkh6NUFXVUIzRndhRGRRUmU4WDRhdW1BeXdZVTJPUlBvS29jZ3htN2tubVZ0N2xmWS9tVU5rRVFqWG1vCnU4cDZWeXkvQ3k3N1ZRR1Ywc1J2anFRcmVMU2VhOEFlb2srVkpqWXdvakZPMHo2MHBOc2daUXYrRTBsSHdmREgKZ3YrWnZrb0dEMTdWa0RGUUdaUll4akx3MXZPRFZPL3F2SEhqTVFVc2NFQnJ4RkIxVHFsYU0wdkZJSVE5N29IYwo5MURSKzdocjMrWFZ4MmwrUzNrS1lQQ3dsbTNERUs3VXhXZGkrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDZqTnFQZnRZYUt4UGhwN2FuZitadXA4RUpHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hCNnJjZzNnR0FhRUcwWjRveTVpMVBUekQ5WE1FVUI5a20yRnFacWdEZEhMbmdNNlpLODZUClZtOWpBT0UxamszUzZCRVBwd3ZjVXJxcHlnc3B4VHIrNzVQT0RRdUd4ZDd5NnFCaWlBdzJKZnRWN0llRlpkencKYzB2dEFVbkYwWVNieDlyTllBc0Ryai9HTFozN3EvNWw0UUxLdjNHbloyRllMZlZ1VGRMZnYzUWFNUWt4M1dNOApUSGo3WTRKNm4vdmlUeDkvbWpBekF4blgzZDB4TG41Q3p4TDZva1hCSDM4MGtQUjkyM3hyQ1ljdnRtVzhFL1dUCmdoOUIxeVFSOG9SVEliR3JGK2EzNGI4Rk93aVpkVUFyYW9xUERyREZKbDY0TEh6blp2c2lucDBGQTFldWliM1kKN0N4d3ZQdm8wN0hPMnROYmNObGEvK25wV3VVdENDREcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFZ2TWlRSnE2ZkU5WlBobm96MFAxamhLT1g3SEZlUFdHYmF6dTRmVDZ5RS9XZnpxCmVwdzdKc0FiY0FhSXgzK25weGR3ZU5GeE1RMXJYdDhzMjFsaHNpSSsxV1JIb0lrRHh3VUJ2MTl5ZzV3aGlxWVkKd0s5RGZIejVBV1VCM0Z3YURkUVJlOFg0YXVtQXl3WVUyT1JQb0tvY2d4bTdrbm1WdDdsZlkvbVVOa0VRalhtbwp1OHA2Vnl5L0N5NzdWUUdWMHNSdmpxUXJlTFNlYThBZW9rK1ZKall3b2pGTzB6NjBwTnNnWlF2K0UwbEh3ZkRICmd2K1p2a29HRDE3VmtERlFHWlJZeGpMdzF2T0RWTy9xdkhIak1RVXNjRUJyeEZCMVRxbGFNMHZGSUlROTdvSGMKOTFEUis3aHIzK1hWeDJsK1Mza0tZUEN3bG0zREVLN1V4V2RpK1FJREFRQUJBb0lCQVFDK0JiQlQreG5IVk9zQQpwbWFLeDNXRVhuc2dURzJ1OUtqemxkejByWWd2dG5HbDMrV0RmQ0pFUGNHcG9JU3RiclJnK09sZy85alpTUERYCm40RTdacGxCOGN0T0xFTEc5eFd5b2x5L3NvWmg1bWliUzc3VHhVQmYwWjdCSVVqYkZjMmdGNGYyNisxYVBLNWwKbUJONytWNDgyYW9mWkUvWDF2dUpVbnUrWmwyY0R6WVE3SXRwNVkydGNZSm1uR29laml5bW8wdHNUT2NMMUdONApjN1djQ2N4TGlkNE9saVgxR01aRU9rWXFnTERJRnhYalFRWFZSemZSenV3SnVZMFprb3QzYjdxQUJZS0Y1QWgzCkpNd3VmNnpJYWFEV1lJTUVWaFM3bUFtOE1XWWlOVE0rY05aekdyZUdZN21wQThJY3ZtR3YxaWxQNnR1UE1kWmkKclVDMThTV3hBb0dCQU9jOUkwcHlFN1VZN3NoNXgvaE90R1ZYaVhZejVSV2daTkRqNjRtSlpHMGpNOE9MdjJYUApQZUV5dDV5NkxRTEhsN1hCalZaa0JwWGNQZkdER1BPcW1neXh1eTBSaERrbTFieFNlL1VvVTlpVStpc21ZYWJlCnVOSlg2VFBXTFo2cXpleStBaDE5cEM3UkhqUFFLNklmdm1KQmRzVndQRHY1SER4VTU2REU5ZDdYQW9HQkFPZkcKM2QwbVhqUGVnN2ZFcDl0RFYvZ2Q3VVp4bHNWeStKMEVFcEJRRDFLdWFEVzVJK3pibHFwaWExdTFjaDV0YzhjNApKczZXUkNLcytzbnJYRGNIQVpPdndmVDdOZ3gwcmh6VUZwdFhrdVhqNHdidldYUFAyRzJidDBMbm5TWis5WmVaClkwNHZmYnV4VDQ3K0YrZThaSTJjdXdNOWJoNVRWMENETWVjT01LS3ZBb0dBTkhXMlQrbFpkemhVMDc1dEUzUW4Ka09ZdkZWWG9udU5vZTh0NVlCWi9aaE1hWno2SkNYdmV1ZnhiazM3WlAwd3dxdGRpVFRzY0UxdUg0Z2F2M25mUgp3eGQvTTFaSi9QMUdlQmJ1Y0V2WjJjVFNqSCtFbityZld6aitldmdZR1dyK2xMcjJsK0l0SVVIbjdERko5Tm5tCnd6dSt5a1FRSmpyNW9PWlNOakw0NUxrQ2dZQlhXTENmK1Nlak1JWS9LUk9CSkQzd3VZYUQ5NmEwUG9IRzJwUU0KWXIrRGowcWloR1V2akFtWnFJR0JERDQzalZRR2pmakIvZ3NyYmprTkEyKzdKUjdKQTRGNnkza3c5SC94U1ZSRApzcHNmbStRZzV1NjFJRzBWMFlzYzRhQnRzNGJtWE4zNXh4Z0JOZThmbWs1ei9LR0FaTUp0bENiOXNyYTlEelF0Ck9VSEc3UUtCZ0ExQitwTGhuZWhsS1J3MGUwdzB6MVRKUHpJa3Z5YWttd0JUSWh4TmNDajVvdE1lZjRGVjVuZGIKYy9GVHd5bmdEcFU1N3M0ZlBnRnh2cVpOSEM2YmlUditqWXRsc3RmRmhPRGlCV2tzamZ1MjJmdFZid0NhdG5rWQpFZGhPT3VHOUc4RCt4RXlVUktFdVdLNUc2R1J1U1RBdkVsdnM5NXRQbkl4OUhBYXlNbTBKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVA2cWxGNm5XQkpaeUxFcENZRnNjT1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5EQTJNalUwTUZvWERUSTJNRGd4TXpBMgpNalUwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVnZNaVFKcTZmRTlaUGhub3owUDFqaEtPWDdIRmVQV0diYXp1NGZUNnlFL1dmenEKZXB3N0pzQWJjQWFJeDMrbnB4ZHdlTkZ4TVExclh0OHMyMWxoc2lJKzFXUkhvSWtEeHdVQnYxOXlnNXdoaXFZWQp3SzlEZkh6NUFXVUIzRndhRGRRUmU4WDRhdW1BeXdZVTJPUlBvS29jZ3htN2tubVZ0N2xmWS9tVU5rRVFqWG1vCnU4cDZWeXkvQ3k3N1ZRR1Ywc1J2anFRcmVMU2VhOEFlb2srVkpqWXdvakZPMHo2MHBOc2daUXYrRTBsSHdmREgKZ3YrWnZrb0dEMTdWa0RGUUdaUll4akx3MXZPRFZPL3F2SEhqTVFVc2NFQnJ4RkIxVHFsYU0wdkZJSVE5N29IYwo5MURSKzdocjMrWFZ4MmwrUzNrS1lQQ3dsbTNERUs3VXhXZGkrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDZqTnFQZnRZYUt4UGhwN2FuZitadXA4RUpHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hCNnJjZzNnR0FhRUcwWjRveTVpMVBUekQ5WE1FVUI5a20yRnFacWdEZEhMbmdNNlpLODZUClZtOWpBT0UxamszUzZCRVBwd3ZjVXJxcHlnc3B4VHIrNzVQT0RRdUd4ZDd5NnFCaWlBdzJKZnRWN0llRlpkencKYzB2dEFVbkYwWVNieDlyTllBc0Ryai9HTFozN3EvNWw0UUxLdjNHbloyRllMZlZ1VGRMZnYzUWFNUWt4M1dNOApUSGo3WTRKNm4vdmlUeDkvbWpBekF4blgzZDB4TG41Q3p4TDZva1hCSDM4MGtQUjkyM3hyQ1ljdnRtVzhFL1dUCmdoOUIxeVFSOG9SVEliR3JGK2EzNGI4Rk93aVpkVUFyYW9xUERyREZKbDY0TEh6blp2c2lucDBGQTFldWliM1kKN0N4d3ZQdm8wN0hPMnROYmNObGEvK25wV3VVdENDREcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSE9UVm0rcVdRMk94ZFNYMnZEa0dPekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFME1EWXlOVFF3V2hjTk1qWXdPREV6TURZeQpOVFF3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETTB3bllaNE5BeEcyelVNZG94dmFvb2Y3YlhxcUYKa3NHTW40ZmxudlRoREx2M0RObkNnM2cwMVc5THVzMkNuZWFxMGt2dTB4WXA5cXJXdUR3MDRCeVB2RDBpT1prbQpxT2dDNVlCZHBIY3kyY01BMS9VUzVEMWllWEhNNnNsNitucGQweDVXTXJxUUkxcmlFNTUwbkVSK3lQalVzVTlVCk0wWVErYkxEZldMa2VwVGJ5NUNWZzgwL09Rd001L2U1TkEvSGFndDhzbVNKa2dGb3ovZUJ1SzNkZnNwdFRKMk0KeGVYaXpJWDFNSmQ0M0lKQ1BZMU81RVBlQ0h3R3ZGUUQxNDFRak9BZVZuQi8weGFxUWNvd1c4SEhOZEdyd21GKwozSDF1NmNhWnMzNFl4NXhGajJETDFxM29BVGsvLzQ1RGMyd2M4K1RNQnlxcUpTWFVKUGhQUllNbkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZINmpOcVBmdFlhS3hQaHA3YW5mK1p1cAo4RUpHTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFCQUdjdUc3RERlOW9UVHUvdlBEQjR0WDZmV1pFOGM2cW4xem5HcSs0TkZWY3E3YTMKeHFXVVp4elhCZXZQRjVYY0pwNTIybndlU2R2ZUE3bGxLdmQzS01ob1orU2lBbjV2RXZRL2gveFpGSlFzbDNQSQp1UlducE50Vnl2Z3hkYTBiQmFRRHVVcWkyK0RXU243TDFZWDIzTUhCcDJBaHBVd1BOSHYzM2JuNDBON0Z3WTlOCnlSWmxjdVd2cXd4ejhaaDc2R1ZMdzE1TXBaUVFCSzY3TEpPeGpNUzhPaWw5bVB0cTIvQzdDVTBDMDJqbVl0dU0KVUg1dFROTm5DT1BhVEFqODJDY1ZiL1FLZWRGQkNDVFR0c1RTY0RwdjlDTlVYK3Q5ZnJkVTlhcVZMZ0Zmc1ZkaQowZTJFcXowdkZwNm5rL2VXTkZ6eUJuc2FQcjliZGhHRkphU0xKQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBek5NSjJHZURRTVJ0czFESGFNYjJxS0grMjE2cWhaTEJqSitINVo3MDRReTc5d3paCndvTjROTlZ2UzdyTmdwM21xdEpMN3RNV0tmYXExcmc4Tk9BY2o3dzlJam1aSnFqb0F1V0FYYVIzTXRuREFOZjEKRXVROVlubHh6T3JKZXZwNlhkTWVWaks2a0NOYTRoT2VkSnhFZnNqNDFMRlBWRE5HRVBteXczMWk1SHFVMjh1UQpsWVBOUHprTURPZjN1VFFQeDJvTGZMSmtpWklCYU0vM2diaXQzWDdLYlV5ZGpNWGw0c3lGOVRDWGVOeUNRajJOClR1UkQzZ2g4QnJ4VUE5ZU5VSXpnSGxad2Y5TVdxa0hLTUZ2Qnh6WFJxOEpoZnR4OWJ1bkdtYk4rR01lY1JZOWcKeTlhdDZBRTVQLytPUTNOc0hQUGt6QWNxcWlVbDFDVDRUMFdESndJREFRQUJBb0lCQUVJOXdrSmRmOEpUaEpMbwpmZ1V4eTVYUUJrZFYvMW9CazF6eVB4WVE2V3RiSGZNUkVkL3BldGZEYXlJWHdOME1TZ3hXeEwzeFFJckR2bzZBCnVOLzAxdWZaWGdBU2xxZzlHZ1BOeTB6OW9wc3NkL2R1NEZDQ3hpTngyVThIWTYvRkVBd0YraHF3ZjB1Y1U0a28KQlNmN1hkK1BDWUpuOFpydWxpdHBSZG9aVkFGRjIwNVdUWE4vaWQ5bTF6NU5pZGxWWThmOVNYU2dMK0g1YUttSApXc3g5cWVrcE9ucWxwYUxCc3FnUXhyYW83UkgvbHNyYjZoZ2JKcmgwcDNnNW50dzU2bHNvMW8xOEFSUTRLNkp2CmYvTDZMaC93MW5hT0FJZ1lmQkJvV3pjYkhoM1l1VVUwQUN5SytqdWpjL1FNamh2NC8vTElqUU90eFJTSmxWbjcKcGMyOGVLRUNnWUVBMlp6QUdoWk9kbzI3S0JzblVvcGdYYkJWMHFBeGZaS3lLVFBJb1ZRUmhlNFFVekV4azI5bApXYS9yaWJMejFHUXhUWUF0bkRPeTNRS3BBUHphMDlVYVp0Z01rK21Ec1czcDYxT3lDOXZ6alE2Z0VNdmRNbVl2CnQyNERmUFhKejhqRWZ5d3pSaTJ1RGxOY2lyZWVuMm1XUitRR1poeTIrcGtTdk9ZRGh2aHZZM2NDZ1lFQThQVEsKdi9LVW9kSTZPMkNvaGVPNGx5elJzNURvM2NJN3lnUVFIUllDbFlNTkVnNWpQWVBrMWlVai9Jc1pIMGFGSmxyMApCRzVvM2hZMnlpY3VpUU9BVGdPa0hRWkhXeElqSmFFOWVUQUpwTDc1a0ZPN21PYTdHSzVRcEU2QXhCUC9OZ0ZrCm80ZjA5NU5xUTR5S0hrQ0hPcmIreFBFTzRoandYK0J2RDRNaTZkRUNnWUJDSDVsWDAvTmZuczJCOEU1UWpHK2YKeUZjcnV6V09uS2E2VWx2aWViTWhhU2RZd0JmNlh0MERGYXVTbWVmeFg4aURiakZ0eDEvUVBHQ3lSaU1RUHk3WQpsVW10SUVXK0FsSVVDY2lPUmZXSnBTb0tNSWcwS2t6UmhnSlZWREpRaXdiNlJhb0c1eForaitJTTNLSzhlYzhLClpVVjBmY0UwQUpOckJ0R0hqN0g1SFFLQmdRQ09DVDZhOTN2MkI5NmJzZGFsVmg4eHZoRy9MK1NWRkRINlczckUKS24xTGRQejNiOVBBSjBkMWxGOHFOelNQNHhvS0NnTmR1VmZIMG9CcG1iOHN0UXVrOFRDRWkzYjBrRFIzc2h4eQptNGFUdnArT0hFMnhUQkZ0OHhOR1I2QlA5Um16MUE1bTkzWEhtdlpBNjA5Zmxkb2hHazREK2JVMFFrOHZ0VFRDCmlDTEVnUUtCZ0J6Sm44V1lRVW1OUGlqSVdIbUM3UXJCUGU3bHRUMTNFZDdMeGhORkxlZndrVXl4bng0OGdiNWkKVmUvQlQvNDEvUDhQYjhLbHlGbXpiMUl6QWhMNzRjcSt3WDlVZEl1Mk05L3lQZHBkUm56MHJ4SFF1eU9Nc283NgpYV2IxZXFHRjdhc3UwRWkxZkVjYmN0WVZKMXdmcDlEVE8vZm4xZHdweDdPby9HMEw0VGthCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVA2cWxGNm5XQkpaeUxFcENZRnNjT1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5EQTJNalUwTUZvWERUSTJNRGd4TXpBMgpNalUwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVnZNaVFKcTZmRTlaUGhub3owUDFqaEtPWDdIRmVQV0diYXp1NGZUNnlFL1dmenEKZXB3N0pzQWJjQWFJeDMrbnB4ZHdlTkZ4TVExclh0OHMyMWxoc2lJKzFXUkhvSWtEeHdVQnYxOXlnNXdoaXFZWQp3SzlEZkh6NUFXVUIzRndhRGRRUmU4WDRhdW1BeXdZVTJPUlBvS29jZ3htN2tubVZ0N2xmWS9tVU5rRVFqWG1vCnU4cDZWeXkvQ3k3N1ZRR1Ywc1J2anFRcmVMU2VhOEFlb2srVkpqWXdvakZPMHo2MHBOc2daUXYrRTBsSHdmREgKZ3YrWnZrb0dEMTdWa0RGUUdaUll4akx3MXZPRFZPL3F2SEhqTVFVc2NFQnJ4RkIxVHFsYU0wdkZJSVE5N29IYwo5MURSKzdocjMrWFZ4MmwrUzNrS1lQQ3dsbTNERUs3VXhXZGkrUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSDZqTnFQZnRZYUt4UGhwN2FuZitadXA4RUpHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hCNnJjZzNnR0FhRUcwWjRveTVpMVBUekQ5WE1FVUI5a20yRnFacWdEZEhMbmdNNlpLODZUClZtOWpBT0UxamszUzZCRVBwd3ZjVXJxcHlnc3B4VHIrNzVQT0RRdUd4ZDd5NnFCaWlBdzJKZnRWN0llRlpkencKYzB2dEFVbkYwWVNieDlyTllBc0Ryai9HTFozN3EvNWw0UUxLdjNHbloyRllMZlZ1VGRMZnYzUWFNUWt4M1dNOApUSGo3WTRKNm4vdmlUeDkvbWpBekF4blgzZDB4TG41Q3p4TDZva1hCSDM4MGtQUjkyM3hyQ1ljdnRtVzhFL1dUCmdoOUIxeVFSOG9SVEliR3JGK2EzNGI4Rk93aVpkVUFyYW9xUERyREZKbDY0TEh6blp2c2lucDBGQTFldWliM1kKN0N4d3ZQdm8wN0hPMnROYmNObGEvK25wV3VVdENDREcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUxGdERkRjFFaTNpL1RnOUpQNEZxQ2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5EQTJNalUwTUZvWERUSTJNRGd4TXpBMgpNalUwTUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtoa3l2MGNuTGhZejY3QktQeFYKMlRJS3kvcjhNSjB0RERBU1FETWV3aGNHQjhhRzB4cDFuZlpWajY0akFDbllZUnk5VjMxeEo4RGtjQm5PUmlRaQo3bG1COWk2RzNJb0VNRU56S3djQ0tPbFFBNC9qdGxZNXU5NDR4dlJnaVlKUUVDaVE1LzBxOXpKVHhOZTdVUSt5CjNkMEpFYVZuY2huaEw1MDc4cEpxMVJzK09Fd2lKTW5lS3c4TGVhbk1yb2VEWEg5d1hBN1hGRkhzS1MweGw0ZUIKZTBCVWsvZjlFcVhpSGlyT2VtcFUwcFFVWStaRDZYQXlsYjI5aWZUSTloSEh0K00yL1BYN0ZNcUlyVnFoa21vegpibmpXMy90eFV3cUJqamFkWjJvTzJxK044UjZHeEhKR3Zrc2xkOGlRcWM3bnpBa2xTcUVTNENkMjdWb0Q4KzRRCnd3MENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWZxTTJvOSsxaG9yRQorR250cWQvNW02bndRa1l3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWs2aGEyU2thZTgrMXZkZHZCNDRnUDRPT3VlS0wKaUE5WjBkRTMwSnppekN5Vnk3SXdYVUFJN0JDaDQxM25IQnd5WGNMVEZhelFLWE9zZGROcG9aWnRZclRVd2pwMgpiYm91YjNjK3puVEJmK0tuc2dteE5jV1ppdGlRbTM3SDdvNzg5VExST1gyclZaWFZMR2ZteDZhVEtHZDBNWDNRCm9NUXRwNG9pMzZKZ2lsZUVkVGRHK2tOcXJBWUEwb1lKTXhzVTZzOWMyaDZxQnIxeHF2bURHUDBYdlVvRmljTXUKM2dTKzVpNU95aWg4Sml0K09EK09NaFNMS1pXTDhhOTZORUZHMmZkS3I1VFFEdS9qVTNFK0NUR3lqVnVoeXlpQQpkZ3EvZXI0SFVlK0pJSVhnbXNWYkJPLzdXcmtxaDJpcjlKZS91anVHVmdWZ21aZmh0dWdMblVpWGhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUdUSy9SeWN1RmpQcnNFby9GWFpNZ3JMK3Z3d25TME1NQkpBTXg3Q0Z3WUh4b2JUCkduV2Q5bFdQcmlNQUtkaGhITDFYZlhFbndPUndHYzVHSkNMdVdZSDJMb2JjaWdRd1EzTXJCd0lvNlZBRGorTzIKVmptNzNqakc5R0NKZ2xBUUtKRG4vU3IzTWxQRTE3dFJEN0xkM1FrUnBXZHlHZUV2blR2eWttclZHejQ0VENJawp5ZDRyRHd0NXFjeXVoNE5jZjNCY0R0Y1VVZXdwTFRHWGg0RjdRRlNUOS8wU3BlSWVLczU2YWxUU2xCUmo1a1BwCmNES1Z2YjJKOU1qMkVjZTM0emI4OWZzVXlvaXRXcUdTYWpOdWVOYmYrM0ZUQ29HT05wMW5hZzdhcjQzeEhvYkUKY2thK1N5VjN5SkNwenVmTUNTVktvUkxnSjNidFdnUHo3aERERFFJREFRQUJBb0lCQUZRTWt3REk4alJWSjd2Ngo3NEViUEdCczRTa3lEUFcya1ZuQkVrZ3h0d0NVNHZhbFB1TDdCOC8zSHRMMDUxVDdpbVUwNEdGZFJGRlQ4OXY5CmlDYnJSSHBxa3J6Z1ZWMlIvNkQ2NytQOG9QenJFZ3dVeFdLK1NGWC9rdFpSQlBHRkVydWNzQjQ5L3NvZzQ2UWwKKzZ6UlEwbmJCL0s5OGthV2poUjE0bnBRVm5QVXlBMmlOaXVTdEk3d3RsUUorS1pBVGJ6Z2tteWJ1bFZFLzRKeQp2UHZWRllsRnowQXFDenZZc1pLZXNoUlFNTWZ1T3FpdkVWYXhyUjRScjNqcFN1NkFtSG5QaGp1aVdZRXYwUE9aCit2d21Wb1ZqMWxvVUMyNWExeEhiNjdrSDVjeUZMODdFLzdJcTQ0elpqVEJsS3QwRXdYQWJxSVFDSndyZDEzREIKdm1kWjdXVUNnWUVBeC8rc3gyQzV5STAzenYydlMrbUowTVJZdmFFcXZlQTI1Q1cvMzczeFFZNEJ3R3ZHcmRxdQpUOTREY2ZleDFOUmZ2eml5aGNEc2pxbjhBbysrcCtJQnlDOUloMDNybVZGaXkxRDR5U21BZy9sOGs3Y3ZvTkFlClBpL2JGS3VJdVFPUDZlUUVmZlk2Y0NuUGF2M1Fka2RiWnVRTVQ1UlpJMjkwZ1N2Z1hDdFUwdGNDZ1lFQTE0dWEKOUlyZnA2TlNDbWsvQWphWm13ZUxDem5DNnAyeU1ob2ZpbFF0MFNNTVZSdjEwVDIyOGR3QVJNRjVqeHd4enp5eApyQVAxdGJBRmdwVzBja1JBQUJwc0dZUzJrNXJTUElNZEFkV2lsK01jQVFydFg2alI4bkd2OVdjTjhIMUJQb0UyCkphY1lUZ25SWDZHL09wUlExN1pqZlB0QW5xNllkbUY4RnRralFMc0NnWUFxQ3d4MlNWWWsyOUw4bDRYUFRvUGoKT0ROemdicnJlWVB3aUNNQzFQb3ZqcnU5aUtxV2g1OFhPUk8rVkpTMHFnU0t2VStDSUtGYUNFL3E5ZTdkZWZ4bgo2ZEMwYU9QN01nbXp0Z3ptdE92SVVwMG1yRjY5enFKYzdsQiswdVNHQ0VLcnAzeHVRbUhjakYySEgxNUFUeFhlCjFsZmtMc3BpVVo3TFBMOElnUzl1dHdLQmdRQ2VKb3E5bngvWFNwZ3BsMnRwM2xINlZDQ0xUZ2hjU1BTMG1rSkcKSnRtdk43NFd2SHN5MmN0ZnpvSkw4SUdXcGFOT1lVUWo2SXZpa1pLWmErcUlaTmRvdS9wUkJ2VkhmRE9CdnRvTAp2SXFlVXo3NjdOK2FicTRNNjZtbHI4V2tqT0xRVDlKQThrZDlDdXNhOWZ6dnFGOWd4eXhjU2FYeVNEMEpyeUZ6ClNrTDVmUUtCZ1FDVG9DQmdnUXM0VTBFekhqeE44d256aUF6OUpmMDJwNXY3RlFpVlUrSXdlRGVPVk5BcWRxcFgKS1pQajFJaTlkWnprcjhuTE1sNm1sSVJsQ2ZGK3N3OGprNFdmWlJlUndESHRGSHZQU2hwbjZrSkFGV093M25laQpIZVNWVGtIZ0lWckZwdWpiY1pRRWw4YkF1MXoxcjhRT2pONCtTdnZwRUdhMmFQK3VqS2RoUFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.6@sha256:994b8b3b26d8a1ef74b51a163daa1ac02aceb9b16f794f8120f15a12011739dc"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.6@sha256:753c1d0549032da83ec45333feec6f4b283331618a1f7fed2f7e2d36efbd4bc9"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.6@sha256:da96840b638d3e9705cfc48af2bddfe92d17eb4f5a776b075bef9ac50efbb042"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
